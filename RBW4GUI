-- making me disable the old script L ass

return(function(ek,Ek,tk,qk,Ck,Bk,lk,Rk,Gk,jk,bk,yk,hk,Kk,gk,Xk,Tk,Vk,uk,kk,Ak,Lk,Uk,Mk,ck,Dk,xk,dk,Wk,Fk,Qk,Sk,Jk,...)local w=select;local sk,Ok,Y=0X0,nil,nil;repeat if sk==0X0 then Ok=0X1;sk=0X1;else Y=Wk;break;end;until(false);local p,f=string.sub,(tonumber);local O=(tostring);sk=3;local z,e,T,G,x=nil,nil,nil,nil,(nil);repeat do if not(sk<=1)then do if sk<=0x002 then e={[0]=0x1};do sk=4;end;else do if sk==0X03 then z=Tk;sk=2;else do T=string.gsub;end;do sk=0;end;end;end;end;end;else if sk==0x0000 then do G=coroutine.wrap;end;do sk=1;end;else x=Ak;sk=0X5;end;end;end;until sk>0X4;local g,R=rawget,(next);sk=2;local y,W,C,B=nil,nil,nil,(nil);do while sk<0X0005 do if sk<=0X1 then if sk~=0X00 then C=0X2^0X34;sk=0;else sk=0X00003;end;else if sk<=2 then y=xk.yield;sk=0X4;else if sk~=3 then do W=string.rep;end;do sk=1;end;else B=1;sk=0x00005;end;end;end;end;end;local Q=getfenv;local j=((Q and Q()or kk));local k=(setmetatable);sk=4;local r,M,b,q,Yk,L=nil,nil,nil,nil,nil,(nil);repeat if not(sk<=2)then if sk<=3 then Yk=function(...)do return w('#',...),{...};end;end;do sk=5;end;else if sk==4 then do r=gk;end;sk=2;else sk=0X6;end;end;else if sk<=0X0 then q=hk;do sk=0x003;end;else if sk~=1 then M={[0]={[0x00]=0X0,1,2,3,4,5,6,0X00007,0X8,9,0Xa,0xb,0X000c,0x000d,0xE,15},{[0]=Dk,0,0x3,2,0X5,Rk,7,0X6,9,8,11,0X00A,0xD,0x000C,15,Gk},{[0]=2,3,0x000,1,6,yk,0X00004,0x5,10,0Xb,0X8,9,14,0X0F,0Xc,0XD},{[0X0]=0x3,0X2,1,0,0x7,0X6,0x5,0X4,0Xb,Sk,0X9,8,15,0XE,13,0XC},{[0X0]=0X4,5,Uk,7,0X0,1,0X2,0x3,12,13,14,15,0x8,9,10,11},{[Qk]=jk,4,0x7,6,0x01,0,3,2,13,12,0x000F,14,0x9,0X8,0xb,0X0A},{[0]=6,0X7,0x004,0X005,0X2,Bk,0,1,Gk,15,12,13,10,11,8,0X9},{[0X0000]=7,6,5,Rk,0X003,0X002,0X1,0,0XF,14,13,12,qk,10,0X9,0X008},{[0]=8,Lk,0xa,qk,12,0XD,Gk,0Xf,0,Dk,lk,0x003,0x4,5,0X0006,0x7},{[Qk]=9,8,0X0000B,10,13,0xC,15,0X00e,1,0X00000,0x00003,2,5,0X0004,7,6},{[0X00]=0Xa,11,0x00008,9,14,0x00F,12,13,2,3,0,Dk,6,0X007,4,jk},{[0]=0XB,0X0000a,0X9,0X0008,15,14,0x0000d,0X00c,3,2,Dk,0X00,0x7,0X6,5,4},{[0]=0x000C,13,14,15,0X08,9,0Xa,qk,0X004,5,6,0X7,Qk,Dk,2,0X3},{[0X000]=0XD,12,0X0000f,0X0e,0X9,0X0008,0Xb,0xa,jk,0x4,yk,0X6,1,0X0,0x3,0x002},{[0X000]=0X0E,0X0F,0XC,13,0XA,qk,8,0X0009,0x6,7,4,5,0X2,3,0X0,1},{[0]=0x000f,0xE,0X0d,12,11,10,9,0X008,0X007,6,0x5,4,Bk,2,0x1,0}};do sk=1;end;else do b=4294967296;end;sk=0;end;end;end;until sk>=6;sk=2;local l,u=nil,nil;repeat if sk<=0 then do l=function()local WX=nil;for lE=0X0,2 do if lE<=0 then WX=r(q,B,B);else do if lE~=1 then return WX;else B=B+1;end;end;end;end;end;end;sk=1;else if sk==1 then do u=2147483648;end;do sk=0X3;end;else q=T(p(q,0X05),"..",function(PN)if r(PN,2)==0X0048 then local YQ=1;while 0.9195468765787506 do if YQ==0 then return'';else do L=f(p(PN,0X1,0X1));end;YQ=0;end;end;else local nW=1;local kW=nil;while nW<=1 do do if nW==0X0000 then if not(L)then return kW;else local h5,p5=0X0,(nil);while true do do if not(h5<=0X0)then if h5~=0X1 then L=nil;h5=0X1;else do return p5;end;end;else p5=W(kW,L);do h5=2;end;end;end;end;end;do nW=0x0002;end;else kW=z(f(PN,uk));nW=0x0000;end;end;end;end;end);sk=0X0;end;end;until sk>=0X3;local m=error;local S=(bk or Ck.unpack);local V=(b-0x1);sk=1;local h=(nil);repeat if sk==0x0 then do local z6=nil;do for Bu=0X00,0X0001 do do if Bu~=0X0000 then for Z1=1,31 do(e)[Z1]=z6;z6=z6*2;end;else z6=0X2;end;end;end;end;end;do sk=0X02;end;else h=function()local O6=0X0000;local S6,v6,b6,N6=nil,nil,nil,nil;repeat if O6<=0X000 then S6,v6,b6,N6=r(q,B,B+0x3);O6=2;else do if O6==0X1 then do return N6*0X001000000+b6*65536+v6*0X0000100+S6;end;else do B=B+0x04;end;do O6=0X001;end;end;end;end;until false;end;sk=0;end;until sk>=0X02;local t,J=function(Oj,hj,Vj)local Gj=nil;for TE=0x0,0X1 do do if TE==0 then Gj=(Oj/e[hj])%e[Vj];else Gj=Gj-Gj%1;end;end;end;return Gj;end,u-1;sk=0X1;local c,X=nil,(nil);repeat if sk==0 then do X=function()local dT,JT,IT,oT,sT,CT,GT=2,nil,nil,nil,nil,nil,nil;repeat do if dT<=3 then if not(dT<=1)then if dT~=0x2 then return oT*(lk^(sT-1023))*(CT/C+GT);else JT=h();do dT=8;end;end;else if dT~=0 then sT=t(IT,0X0014,11);dT=0X5;else do if sT==0 then if CT==0x0 then return oT*0;else local v6=0;while(true)do if v6==0X0 then sT=0x001;v6=1;else do GT=0;end;break;end;end;end;elseif sT~=2047 then elseif CT~=0X0 then return oT*(1/0X0);else return oT*(0x0/0x0);end;end;dT=3;end;end;else do if dT<=0X00005 then if dT~=0x4 then CT=t(IT,0X0,20)*b+JT;dT=0x6;else if not(JT==0 and IT==0)then else return 0;end;dT=7;end;else if dT<=0X06 then GT=0x0001;do dT=0;end;else do if dT==0X7 then oT=(-1)^t(IT,0x1f,1);dT=1;else IT=h();dT=4;end;end;end;end;end;end;end;until(false);end;end;sk=2;else do c=function()local i3,s3=h(),h();local c3=(0x0000);repeat do if c3~=0X0 then return s3*b+i3;else if s3>=u then s3=s3-b;end;c3=1;end;end;until false;end;end;sk=0X00;end;until sk==0X02;local D=rawset;local E=(bit or Vk);local F=E and E[Jk]or function(Ba,Ea)local ea,Ya=nil,(nil);local Ua=(0X001);while Ua<=3 do if not(Ua<=0X00001)then if Ua~=2 then do Ea=Ea%b;end;do Ua=0;end;else do ea=Dk;end;do Ua=0X3;end;end;elseif Ua==0X0000 then Ya=0;Ua=0X04;else Ba=Ba%b;Ua=2;end;end;do Ua=1;end;while"\041d\116'*q"do do if Ua==0X0 then return Ya+Ba*ea+Ea*ea;else while Ba>0 and Ea>0X0 do local XY,bY,RY=3,nil,nil;repeat do if XY<=0X1 then do if XY==0 then Ya=Ya+M[bY][RY]*ea;do XY=0X0001;end;else Ba=(Ba-bY)/0x00010;XY=0X4;end;end;else if XY~=0X002 then do bY=Ba%0X10;end;XY=0X2;else RY=Ea%16;XY=0;end;end;end;until XY>0x0003;Ea=(Ea-RY)/0X10;ea=ea*16;end;Ua=0X000;end;end;end;end;local d=E and E.band or function(sU,RU)local uU=(1);repeat if uU==0 then RU=RU%b;uU=0X2;else sU=sU%b;uU=0x0;end;until uU>1;return((sU+RU)-F(sU,RU))/2;end;local U=(ek);local K=(E and E.bor or function(m8,R8)m8=m8%b;do R8=R8%b;end;return V-d(V-m8,V-R8);end);local s,I,i,H,v,Z=E and E.bnot or function(Af)return V-(Af%b);end,nil,nil,nil,nil,nil;for pB=0X0,0x6 do if not(pB<=0x2)then if not(pB<=0X0004)then do if pB~=0X5 then Z=Mk;else do v=function()local Lj,Dj=0,0X0;while true do local NC=r(q,B,B);B=B+1;Lj=K(Lj,I(d(NC,127),Dj));do if d(NC,128)==0 then do return Lj;end;end;end;Dj=Dj+7;end;end;end;end;end;else do if pB==0X0003 then i=i or function(nQ,eQ)local KQ=nil;for sr=0X0,0X002 do do if not(sr<=0)then do if sr~=0x1 then do KQ=(nQ%b/e[eQ]);end;else do if eQ<Qk then return I(nQ,-eQ);end;end;end;end;else if not(eQ>=ck)then else return 0X0;end;end;end;end;do return KQ-KQ%1;end;end;else H={[1]=0X00001,[Xk]=6,[0X004]=1,[9]=4,[0X009]=Uk,[7]=0x0003,[0X0006]=0X2,[3]=3,[0X1]=0X006,[5]=0x9,[0X9]=lk,[0X2]=0X003};end;end;end;elseif pB<=0 then I=E and E.lshift;else if pB~=0X00001 then I=I or function(B5,E5)local q5=(1);while q5~=2 do if q5~=0x0 then if not(E5>=0X00020)then else do return 0X0;end;end;q5=0x0;else if E5<0 then do return i(B5,-E5);end;end;q5=2;end;end;return(B5*e[E5])%b;end;else i=E and E[tk];end;end;end;local P=assert;local N=(l());local a={0x6,0X7,Rk};local Pk=l();sk=0X02;local o,wk,A,fk,Zk,mk=nil,nil,nil,nil,nil,nil;while sk<=5 do if sk<=2 then if not(sk<=0x0)then if sk~=0x1 then o=function()local OT=(nil);for vk=0X0,2 do if not(vk<=0)then if vk~=0X1 then return OT;elseif OT>J then return OT-b;end;else OT=v();end;end;end;do sk=0X0;end;else A=Fk;do sk=0X4;end;end;else do wk=function(rp)local Jp,pp,Pp,Kp,Ap=nil,nil,nil,nil,nil;local Ip=(0X5);while Ip~=0X7 do do if not(Ip<=2)then if not(Ip<=4)then if Ip~=5 then do Pp=F(Jp[2],Pk);end;Ip=0X02;else do Jp={r(q,B,B+0X0003)};end;Ip=4;end;else if Ip==0X3 then Ap=F(Jp[4],Pk);Ip=0x1;else pp=F(Jp[1],Pk);Ip=0X6;end;end;else if not(Ip<=0)then if Ip~=0X1 then do Kp=F(Jp[3],Pk);end;Ip=3;else Pk=(0X81*Pk+rp)%256;do Ip=0;end;end;else B=B+Rk;do Ip=0X07;end;end;end;end;end;return Ap*0X00001000000+Kp*Ek+Pp*0X100+pp;end;end;sk=1;end;else do if not(sk<=0X3)then do if sk==0X4 then fk=function(zA)local FA,SA=nil,nil;local DA=2;repeat if DA<=0X00000 then SA=dk;DA=0X1;else if DA~=0x1 then FA=h();DA=0X0;else for jD=0X1,FA,7997 do local ID,zD=nil,nil;local QD=(0X003);while QD<0X5 do do if not(QD<=1)then if QD<=0X2 then if not(ID>FA)then else ID=FA;end;QD=0X1;else if QD~=3 then SA=SA..z(S(zD));QD=0X5;else ID=jD+7997-0X1;QD=2;end;end;else if QD~=0X0 then zD={r(q,B+jD-Dk,B+ID-Dk)};QD=0;else for fN=1,#zD do do(zD)[fN]=F(zD[fN],N);end;N=(zA*N+35)%0X00100;end;QD=4;end;end;end;end;end;DA=3;end;end;until DA==0X3;B=B+FA;return SA;end;sk=0X05;else Zk={};sk=0x3;end;end;else mk={};sk=6;end;end;end;end;do sk=0X0001;end;local pk,rk=nil,(nil);while sk~=0X3 do if sk<=0X0 then function pk(ik,ak,vk)local Nk,Hk=ak[7],(ak[0X2]);local Ez,wz=ak[9],ak[0X8];local az=ak[0X006];local Ik=ak[0X03];local nk=(ak[0x0005]);local ok=ak[1];local jz=k({},{__mode='\118'});local Lz=nil;Lz=function(...)local pO=1;local cO=(Q and Q()or _ENV);local BO={};local aO,mO=Yk(...);aO=aO-0x00001;for WL=0X0,aO do if Nk>WL then BO[WL]=mO[WL+1];else break;end;end;local NO=(cO==j and vk or cO);mk[0X4]=ak;(mk)[1]=BO;if not Ez then do mO=nil;end;else if wz then(BO)[Nk]={n=aO>=Nk and aO-Nk+0X00001 or 0,S(mO,Nk+1,aO+1)};end;end;local IO=0;do if NO==cO then else if U then U(Lz,NO);else do _ENV=NO;end;end;end;end;local KO,MO,ZO,OO=Y(function()while-1053105252 do local da=ok[pO];local ma=(da[0X5]);pO=pO+1;if not(ma<43)then do if ma<0x0041 then if not(ma>=54)then if ma>=48 then if ma<51 then if ma>=49 then if ma==50 then do BO[da[4]]=BO[da[0X00007]]*BO[da[0X6]];end;else pO=da[7];end;else do repeat local Yx,gx=jz,(BO);if not(#Yx>0)then else local Ml={};for Aa,ha in R,Yx do for mU,NU in R,ha do if not(NU[1]==gx and NU[2]>=0x0)then else local W0=NU[0X02];if not(not Ml[W0])then else Ml[W0]={gx[W0]};end;(NU)[1]=Ml[W0];NU[2]=1;end;end;end;end;until true;end;return true,da[4],1;end;else do if ma<52 then(BO)[da[4]]=BO[da[0X7]]~=BO[da[0X6]];else if ma~=53 then do if not(not(BO[da[7]]<BO[da[0X6]]))then else pO=da[0X00004];end;end;else do if da[6]==75 then pO=pO-0X1;ok[pO]={[0X7]=(da[7]-52),[4]=(da[4]-0x34),[5]=0X42};else repeat local Uo,Do=jz,BO;if#Uo>0X0000 then local ni={};for E5,l5 in R,Uo do for pX,uX in R,l5 do if uX[0x1]==Do and uX[2]>=0 then local VN=(uX[2]);if not(not ni[VN])then else do(ni)[VN]={Do[VN]};end;end;(uX)[0X01]=ni[VN];(uX)[0X2]=0X1;end;end;end;end;until true;local Kl=da[0X4];do return false,Kl,Kl;end;end;end;end;end;end;end;else if ma>=0X2d then if ma>=0X2e then if ma~=0X2f then do IO=da[4];end;(BO[IO])();IO=IO-1;else(BO)[da[0X0004]]={};end;else local DY=da[7];local bY=(BO[DY]);for pd=DY+0x0001,da[0X006]do bY=bY..BO[pd];end;(BO)[da[4]]=bY;end;else if ma==0x2c then BO[da[4]]=s(BO[da[7]]);else(BO[da[4]])[da[3]]=da[2];end;end;end;else if ma<0X3B then do if not(ma<0x00038)then if ma<57 then if BO[da[7]]==BO[da[0x006]]then else pO=da[4];end;else if ma~=58 then BO[da[0x04]][BO[da[0X007]]]=da[2];else(BO)[da[4]]=BO[da[7]][da[0x0002]];end;end;else if ma==0x37 then BO[da[0X4]]=d(BO[da[0X0007]],BO[da[0X6]]);else local ZP=BO[da[0X7]]/BO[da[6]];(BO)[da[0x04]]=ZP-ZP%0X00001;end;end;end;else if not(ma>=62)then if not(ma<0X03C)then if ma==0X3d then local xK=(Ik[da[0x7]]);local nK=(xK[4]);local PK=(nil);local BK=#nK;if BK>0X0 then do PK={};end;for yZ=1,BK do local tZ=nK[yZ];if tZ[0X1]==0x0 then(PK)[yZ-0X001]={BO,tZ[0X2]};else do(PK)[yZ-1]=ik[tZ[2]];end;end;end;(x)(jz,PK);end;BO[da[4]]=pk(PK,xK,NO);else BO[da[4]]=K(BO[da[0X07]],BO[da[0X6]]);end;else if BO[da[7]]<=BO[da[6]]then do pO=da[0x4];end;end;end;else do if not(ma<63)then if ma==0X40 then(BO)[da[0x4]]=nil;else local BM=da[4];local EM,yM,KM=BO[BM]();do if not(EM)then else(BO)[BM+1]=yM;(BO)[BM+2]=KM;pO=da[7];end;end;end;else local md=(da[0X4]);local hd,Sd,Md,vd,gd,Ed=BO[md]();if hd then(BO)[md+0x01]=Sd;(BO)[md+0X00002]=Md;(BO)[md+3]=vd;(BO)[md+0x4]=gd;do BO[md+0X5]=Ed;end;do pO=da[7];end;end;end;end;end;end;end;elseif not(ma<76)then if not(ma<0X51)then do if not(ma>=84)then do if not(ma>=0x00052)then local SL=da[4];BO[SL](BO[SL+0X1]);IO=SL-1;else if ma==0X53 then if da[6]~=189 then local y8=(da[4]);for ym=y8,y8+(da[7]-0x1)do(BO)[ym]=mO[Nk+(ym-y8)+0x001];end;else do pO=pO-0X1;end;(ok)[pO]={[4]=(da[0x4]-26),[7]=(da[0x7]-26),[0X5]=12};end;else local GJ=(da[0X4]);BO[GJ](S(BO,GJ+0X00001,IO));do IO=GJ-0X1;end;end;end;end;else if ma>=85 then if ma~=0X056 then BO[da[0X4]]=NO[da[3]];else local Xv=da[4];local Yv=(Xv+2);local Sv=Xv+1;(BO)[Xv]=P(f(BO[Xv]),"`for` initial value must be a number");BO[Sv]=P(f(BO[Sv]),'\096f\111\114\096\032\108\105\109\105t v\097\108u\101 \109\117\115\116 \098e \097\032\110\117\109b\101\114');do(BO)[Yv]=P(f(BO[Yv]),"`for` step value must be a number");end;do BO[Xv]=BO[Xv]-BO[Yv];end;pO=da[7];end;else(NO)[da[3]]=BO[da[4]];end;end;end;else if not(ma<78)then if not(ma<0X0004f)then if ma==0X50 then do(BO)[da[4]]=BO[da[0X7]]/BO[da[6]];end;else(BO)[da[4]]=mk[da[0X07]];end;else do(BO)[da[4]]=BO[da[0X0007]]==BO[da[6]];end;end;else if ma~=0X00004d then if BO[da[0X7]]==BO[da[0X6]]then pO=da[4];end;else(mk)[da[0x7]]=BO[da[4]];end;end;end;else if not(ma<70)then do if not(ma>=0x000049)then if not(ma>=71)then local rM,tM=da[0X00004],((da[6]-0X00001)*0x32);local cM=BO[rM];for V3=0x1,da[0x00007]do do cM[tM+V3]=BO[rM+V3];end;end;else if ma==72 then BO[da[0X4]]=I(BO[da[0x7]],BO[da[0x6]]);else do if not(BO[da[7]]<BO[da[0X0006]])then else pO=da[0x4];end;end;end;end;else if ma>=74 then if ma==0X0004b then do if not BO[da[4]]then pO=da[7];end;end;else if da[6]==0X00E7 then do pO=pO-1;end;(ok)[pO]={[0X5]=7,[7]=(da[7]-0x6D),[4]=(da[4]-0X06D)};elseif da[0X6]==9 then do pO=pO-1;end;(ok)[pO]={[0x0005]=0X40,[0X00004]=(da[4]-99),[0x7]=(da[7]-99)};else repeat local kz,cz=jz,(BO);if not(#kz>0)then else local tH={};for tL,oL in R,kz do for Vf,mf in R,oL do if mf[0X1]==cz and mf[2]>=0 then local kj=mf[2];if not(not tH[kj])then else tH[kj]={cz[kj]};end;(mf)[0X1]=tH[kj];mf[0x2]=1;end;end;end;end;until true;local lp=da[4];do return false,lp,lp+da[0x7]-2;end;end;end;else if not(BO[da[4]])then else pO=da[7];end;end;end;end;else do if ma<67 then if ma==0X42 then if da[6]==177 then pO=pO-0X1;ok[pO]={[4]=(da[4]-0X31),[0X5]=0X0017,[7]=(da[7]-49)};else local Xs,Vs=aO-Nk,da[4];do if not(Xs<0)then else Xs=-0X001;end;end;for G9=Vs,Vs+Xs do(BO)[G9]=mO[Nk+(G9-Vs)+0X1];end;IO=Vs+Xs;end;else do(BO)[da[4]]=BO[da[0X7]]+BO[da[0X06]];end;end;else if not(ma<0X00044)then if ma==0x000045 then do if BO[da[0X7]]==da[2]then do pO=da[0x4];end;end;end;else local sy,vy=da[0x7],(da[0X06]);local wy=da[0X004];if sy~=0 then IO=wy+sy-1;end;local Ty,Hy=nil,nil;do if sy~=0x1 then Ty,Hy=Yk(BO[wy](S(BO,wy+1,IO)));else Ty,Hy=Yk(BO[wy]());end;end;if vy~=1 then if vy==0X0 then do Ty=Ty+wy-1;end;do IO=Ty;end;else Ty=wy+vy-2;IO=Ty+1;end;local NH=(0);do for CY=wy,Ty do do NH=NH+1;end;(BO)[CY]=Hy[NH];end;end;else IO=wy-1;end;end;else local ky=ik[da[7]];do(ky[1])[ky[0x2]]=BO[da[4]];end;end;end;end;end;end;end;else if ma<0X15 then do if not(ma<0Xa)then do if not(ma>=0Xf)then if not(ma>=0X000C)then do if ma==0x00b then if da[0x00006]~=0x00050 then BO[da[0X4]]=not BO[da[7]];else do pO=pO-0x1;end;do(ok)[pO]={[0X7]=(da[7]-188),[4]=(da[0x4]-188),[0x5]=21};end;end;else local EL=da[0X4];BO[EL]=BO[EL](BO[EL+0X1],BO[EL+2]);do IO=EL;end;end;end;else if not(ma>=13)then if da[6]==0X0056 then do pO=pO-0X1;end;ok[pO]={[0x0004]=(da[4]-101),[7]=(da[7]-101),[0X005]=23};else BO[da[4]]=BO[da[0X00007]];end;else do if ma==14 then local Gg=(da[4]);BO[Gg]=BO[Gg](BO[Gg+1]);IO=Gg;else local OI=da[0x4];BO[OI]=BO[OI](S(BO,OI+1,IO));IO=OI;end;end;end;end;else if not(ma>=18)then if not(ma<16)then do if ma~=17 then(BO)[da[0X004]]=BO[da[0X7]][BO[da[0x6]]];else do if da[0x00006]~=0X092 then BO[da[4]]=mO[Nk+0x00001];else pO=pO-1;do(ok)[pO]={[0X5]=12,[7]=(da[7]-0xBE),[4]=(da[4]-190)};end;end;end;end;end;else do BO[da[0X0004]]={S({},1,da[7])};end;end;else do if ma<0x13 then BO[da[4]]=true;else if ma~=0X14 then local vM=(da[4]);local mM=G(function(...)(y)();for Tv,Lv in...do(y)(true,Tv,Lv);end;end);(mM)(BO[vM],BO[vM+0X01],BO[vM+2]);do IO=vM;end;BO[vM]=mM;pO=da[0X007];else local Kp=da[4];IO=Kp+da[7]-1;BO[Kp](S(BO,Kp+0X1,IO));IO=Kp-0X1;end;end;end;end;end;end;else if not(ma<5)then if not(ma>=7)then do if ma~=6 then(BO)[da[0X4]]=BO[da[0X7]]~=da[0X2];else local LG,NG=da[0X4],(BO[da[7]]);BO[LG+1]=NG;BO[LG]=NG[da[2]];end;end;else if not(ma>=0X0008)then if da[0X6]==99 then pO=pO-0X01;ok[pO]={[5]=0X4A,[7]=(da[7]-64),[0X4]=(da[0X4]-0X40)};elseif da[0x00006]==14 then do pO=pO-1;end;ok[pO]={[4]=(da[0X4]-75),[0x07]=(da[7]-75),[5]=64};else BO[da[0x04]]=#BO[da[0x7]];end;else if ma~=9 then local rs=da[4];local ws=BO[rs+0X2];local ys=BO[rs]+ws;BO[rs]=ys;if ws>0X0 then if not(ys<=BO[rs+1])then else do pO=da[0X07];end;(BO)[rs+3]=ys;end;else if ys>=BO[rs+0X001]then pO=da[0X7];BO[rs+3]=ys;end;end;else do(BO)[da[4]]=false;end;end;end;end;else if not(ma>=2)then if ma==1 then local D9=da[0X0004];BO[D9](BO[D9+0X1],BO[D9+2]);do IO=D9-1;end;else do BO[da[0X004]]=BO[da[0X7]]<BO[da[0x0006]];end;end;else do if ma<0X3 then repeat local r5,q5=jz,BO;if#r5>0X0 then local ig=({});for Jn,Yn in R,r5 do for Je,ce in R,Yn do if ce[0X001]==q5 and ce[2]>=0 then local LW=(ce[0x2]);if not ig[LW]then do ig[LW]={q5[LW]};end;end;ce[0X00001]=ig[LW];do ce[2]=0X00001;end;end;end;end;end;until true;return true,da[4],0;else do if ma~=4 then do(BO)[da[0x4]]=BO[da[7]]>=BO[da[0X06]];end;else if not(BO[da[0x7]]<=da[2])then pO=da[0X00004];end;end;end;end;end;end;end;end;end;else if ma>=0X020 then if not(ma>=0X25)then if not(ma<34)then do if not(ma<0x23)then if ma~=0X000024 then BO[da[4]]=BO[da[0X7]]>BO[da[6]];else local kj,Vj=da[0X4],da[0X7];IO=kj+Vj-1;repeat local Es,ws=jz,BO;if#Es>0X00 then local pH=({});for fi,bi in R,Es do for HR,aR in R,bi do if not(aR[0X00001]==ws and aR[2]>=0)then else local n5=aR[2];if not pH[n5]then(pH)[n5]={ws[n5]};end;aR[1]=pH[n5];do(aR)[0x002]=0X1;end;end;end;end;end;until true;return true,kj,Vj;end;else BO[da[0X004]]=BO[da[0X7]]%da[0X2];end;end;else if ma~=33 then BO[da[0X0004]]=i(BO[da[0X7]],BO[da[0X0006]]);else if BO[da[0x00007]]==da[2]then else pO=da[0X004];end;end;end;else if not(ma<40)then do if ma>=41 then if ma==42 then BO[da[0X0004]][BO[da[7]]]=BO[da[6]];else do BO[da[4]]=BO[da[0x7]]^BO[da[0X0006]];end;end;else do BO[da[4]]=BO[da[7]]<=BO[da[6]];end;end;end;else if not(ma>=0x0026)then(BO[da[4]])[da[3]]=BO[da[0X6]];else if ma==0X000027 then(BO)[da[4]]=F(BO[da[0X00007]],BO[da[6]]);else local g4=da[7];do(BO)[da[4]]=BO[g4]..BO[g4+1];end;end;end;end;end;else if ma<0x01a then do if ma>=23 then do if ma>=24 then if ma~=25 then local j_=(ik[da[7]]);do(BO)[da[4]]=j_[0X1][j_[2]];end;else local zz=(da[4]);local Xz=G(function(...)y();for CE,fE,iE,vE,EE in...do(y)(true,CE,fE,iE,vE,EE);end;end);(Xz)(BO[zz],BO[zz+1],BO[zz+0X2]);IO=zz;(BO)[zz]=Xz;pO=da[0X07];end;else repeat local rW,hW=jz,(BO);do if#rW>0 then local Q5=({});do for FD,TD in R,rW do do for Qt,Wt in R,TD do if not(Wt[1]==hW and Wt[2]>=0)then else local Ss=(Wt[2]);if not(not Q5[Ss])then else(Q5)[Ss]={hW[Ss]};end;(Wt)[0X1]=Q5[Ss];do(Wt)[0X02]=0X001;end;end;end;end;end;end;end;end;until true;return false,da[4],IO;end;end;else if ma~=22 then repeat local Iw,Vw=jz,BO;if not(#Iw>0)then else local bZ=({});for wv,bv in R,Iw do for BQ,jQ in R,bv do do if not(jQ[1]==Vw and jQ[0X2]>=0X0)then else local ng=(jQ[2]);if not(not bZ[ng])then else do(bZ)[ng]={Vw[ng]};end;end;(jQ)[0X1]=bZ[ng];do(jQ)[0x002]=1;end;end;end;end;end;end;until true;return;else repeat local AH,LH,xH=jz,BO,da[4];if#AH>0X0 then local Iv=({});do for CZ,TZ in R,AH do for GU,XU in R,TZ do if XU[0X1]==LH and XU[2]>=xH then local B9=XU[2];do if not(not Iv[B9])then else(Iv)[B9]={LH[B9]};end;end;XU[0X1]=Iv[B9];do XU[0X02]=1;end;end;end;end;end;end;until true;end;end;end;else if not(ma>=29)then do if ma>=27 then if ma==0X1C then BO[da[0X4]]=da[3];else BO[da[0X004]]=-BO[da[0X7]];end;else for ia=da[4],da[0X7]do(BO)[ia]=nil;end;end;end;else do if not(ma<0X1E)then if ma==0X1f then do BO[da[0x4]]=BO[da[0X00007]]%BO[da[6]];end;else(BO)[da[0x04]]=BO[da[0x0007]]-BO[da[0x6]];end;else local UC=(da[4]);local vC=BO[UC];local fC=((da[6]-0x00001)*0x32);for YW=0X00001,IO-UC do do vC[fC+YW]=BO[UC+YW];end;end;end;end;end;end;end;end;end;end;end);if not(KO)then do if Z(MO)~="\115\116r\105\110g"then m(MO,0X0);else if not(A(MO,"\097t\116emp\116 \116o y\105\101\108d a\099\114\111s\115\032m\101\116\097\109\101\116h\111d/C\037\045\099\097ll\032b\111u\110da\114y"))then else return coroutine.yield();end;do if not(A(MO,"^.-:%d+: "))then m(MO,0);else m("Luraph Script:"..(nk[pO-0X01]or'(\105nternal\041')..": "..O(MO),0X00000);end;end;end;end;else if MO then if OO~=0X1 then return BO[ZO](S(BO,ZO+1,IO));else return BO[ZO]();end;elseif not(ZO)then else do return S(BO,ZO,OO);end;end;end;end;if U then U(Lz,vk);end;return Lz;end;sk=0x2;else if sk~=0X1 then function rk()local pf,Rf,Uf=nil,nil,nil;local Mf=(0X01);do repeat if not(Mf<=1)then if Mf~=2 then do Uf={{},Kk,{},Kk,{},Kk,Kk,nil,nil};end;break;else Rf={};Mf=3;end;else do if Mf==0 then pf={};Mf=0X02;else Mf=0X00;end;end;end;until false;end;local Xf,qf,Bf=nil,nil,(nil);for MQ=0x0000,0X7 do do if MQ<=0X3 then if not(MQ<=1)then if MQ~=2 then(Uf)[9]=t(qf,0x00001,1)~=0;else qf=l();end;else do if MQ==0 then do Xf=Dk;end;else do(Uf)[0X006]=v();end;end;end;end;else do if MQ<=5 then if MQ==0X04 then Bf={};else Uf[0X8]=t(qf,0x2,0X0001)~=0;end;else do if MQ~=6 then(Uf)[7]=v();else do Uf[0X2]=v();end;end;end;end;end;end;end;end;(Uf)[15]=h();local ff=h()-0X0001280f;local wf=Uf[0X03];for pV=0,ff-Dk do(wf)[pV]=rk();end;local Lf=(Uf[1]);local Jf=(h()-0XaF3);for b8=0,1 do if b8~=0 then do(Uf)[0X4]=Rf;end;else for Q8=0X001,Jf do do Lf[Q8]={[0X4]=o(),[0X1]=l(),[0x6]=o(),[lk]=l(),[3]=l(),[0X5]=v(),[0X7]=o()};end;end;end;end;do for UM=1,v()do Rf[UM]={l(),v()};end;end;local Tf,df=nil,nil;for qs=0,0X003 do do if qs<=1 then if qs==0X0 then do Tf=h();end;else for yL=1,Tf do local KL,qL,HL=nil,nil,(nil);local TL=(1);repeat if TL<=1 then do if TL==0X0000 then qL=h();TL=2;else KL=h();do TL=0;end;end;end;else do if TL==0X2 then HL=h();do TL=0X3;end;else for Gz=KL,qL do Uf[0x0005][Gz]=HL;end;break;end;end;end;until false;end;end;else if qs==0x02 then do Uf[12]=l();end;else df=h()-0X00017573;end;end;end;end;Mf=0x0;local nf,Vf=nil,nil;do while true do if not(Mf<=1)then do if not(Mf<=0x2)then if Mf==0X0003 then do return Uf;end;else do for Ac=Dk,Jf do local Gc=(Uf[1][Ac]);for jX,zX in ipairs(a)do local hX,mX=nil,(nil);for ND=0X0,0X002 do do if ND<=0 then do hX=H[zX];end;else do if ND==1 then do mX=Gc[hX];end;else do if mX==8 then local np,Pp=pf[Gc[zX]],nil;do for Xr=0,1 do if Xr==0X0 then do Pp=Bf[np];end;else if not(Pp)then else(Gc)[hX]=Pp[1];local cf=(Pp[0X2]);cf[#cf+0x1]={Gc,hX};end;end;end;end;elseif mX==0x7 then do Gc[zX]=Ac+Gc[zX]+1;end;end;end;end;end;end;end;end;end;end;end;Mf=0X3;end;else Vf=l()~=0;Mf=1;end;end;else if Mf~=0X0 then for jc=1,df do local Rc,Lc=nil,nil;local Ec=(1);while Ec~=3 do if not(Ec<=0x00000)then if Ec~=0X001 then(pf)[jc-0X1]=Xf;Ec=3;else Rc=l();do Ec=0X0;end;end;else Lc=nil;do Ec=2;end;end;end;if Rc==0xAe then do Lc=true;end;elseif Rc==194 then Lc=c();elseif Rc==0X00009E then Lc=p(fk(nf),l());elseif Rc==0XF6 then Lc=c();elseif Rc==47 then do Lc=p(fk(nf),6);end;elseif Rc==0x1C then Lc=p(fk(nf),0X13);elseif Rc==0X35 then Lc=false;elseif Rc==0X2d then Lc=c();elseif Rc==0X10 then Lc=X();elseif Rc==213 then do Lc=p(fk(nf),l());end;elseif Rc==143 then Lc=p(fk(nf),h());elseif Rc==190 then Lc=p(fk(nf),l());elseif Rc==0XCA then Lc=c();end;local Pc=({Lc,{}});Ec=0;repeat if not(Ec<=0X0)then if Ec~=1 then Xf=Xf+1;do Ec=0x00001;end;else if Vf then local kx=1;while kx<=0X1 do if kx==0 then Ok=Ok+0X1;kx=0X2;else Zk[Ok]=Pc;kx=0x0;end;end;end;Ec=0X00003;end;else do(Bf)[Xf]=Pc;end;Ec=0X00002;end;until Ec>=3;end;Mf=0X0004;else nf=l();Mf=2;end;end;end;end;end;sk=0X3;else sk=0x0;end;end;end;local zk=(rk());sk=1;do while 0.09714209800714635 do if sk<=0 then Zk=Kk;sk=0X2;elseif sk~=0x0001 then do return pk(Kk,zk,j)(...);end;else(mk)[0X3]=Zk;sk=0;end;end;end;end)(setfenv,0X10000,"r\115h\105\102\116",0Xb,table,0X3,0X002,0X00004,0XE,5,unpacknil,string.byte,0X008,string.char,bit32,16,_ENV,table.insert,9,0X00006,type,0X20,0X00001,coroutine,"",pcall,string.match,0,10,'b\120\111r',...);
