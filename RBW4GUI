-- This file was generated using Luraph Obfuscator v13.5.1

return(function(tU,rU,aU,RU,jU,gU,qU,IU,OU,PU,HU,hU,FU,NU,MU,CU,DU,VU,yU,KU,AU,TU,bU,fU,dU,vU,QU,GU,BU,xU,ZU,zU,sU,lU,XU,nU,YU,...)local wU=(1);local c,J=nil,nil;repeat do if wU~=0 then do c=bU;end;wU=0X0;else J=HU;break;end;end;until false;wU=0;local C,u=nil,(nil);do repeat if wU==0 thenwU=1;else do u=MU;end;wU=0X2;end;until wU>1;end;local W=(tostring);wU=0;local S,k=nil,(nil);while wU~=2 do if wU==0x0000 then S=AU;wU=1;else k=NU;wU=2;end;end;local N=(setmetatable);wU=1;local m,H,pU,K=nil,nil,nil,(nil);do while wU<0X4 do do if wU<=1 then if wU~=0 then m=OU.char;do wU=3;end;else K=KU;wU=4;end;else do if wU==2 then pU={};wU=0;else H=OU.gsub;do wU=0X00002;end;end;end;end;end;end;end;local l,j=nil,(nil);local A=table.insert;local O=rawget;local f=(bit or bit32);do for mP=0,1 do if mP==0 then l=0X00001;else do j=0X000080000000;end;end;end;end;do wU=1;end;local t,g,z=nil,nil,nil;while 0.5744732166449754 do if wU<=1 then if wU==0x0 then z={[0]=0X1};break;else t=tU;do wU=0X3;end;end;else if wU==2 then wU=0x0000;else g=rU.yield;wU=0X2;end;end;end;local d=(getfenv);wU=0X000;local a,b=nil,(nil);repeat if not(wU<=0)then if wU~=0X1 then b=QU;break;else wU=0X0002;end;else a=(d and d()or gU);wU=1;end;until false;local Y=nil;wU=6;local q,L,F,X,G,p,h=nil,nil,nil,nil,nil,nil,nil;while wU<0X8 do do if wU<=0X3 then do if wU<=0x1 then if wU==0 then p=nU;wU=0X04;else L=aU;wU=2;end;else do if wU~=0X2 then X=0X100000000;wU=0X0007;else F=function()local bO,tO,FO,OO=nil,nil,nil,nil;local oO=(0X001);do while true do if not(oO<=0)then if oO~=0X1 then do l=l+4;end;oO=0X0;else bO,tO,FO,OO=u(C,l,l+0x3);do oO=2;end;end;else do return OO*16777216+FO*0X10000+tO*256+bO;end;end;end;end;end;wU=3;end;end;end;end;else do if wU<=0x5 then if wU~=0X4 then q=function()local o9=nil;for GB=0X0,2 do if GB<=0x0 then o9=u(C,l,l);else if GB~=0x1 then return o9;else l=l+0X01;end;end;end;end;wU=1;else do h=lU^52;end;wU=0X08;end;elseif wU==0X6 then C=H(S(C,5),DU,function(ab)do if u(ab,0x2)~=0X48 then local cA=(m(k(ab,16)));if not(Y)then do return cA;end;else local Ke=nil;for hL=0,2 do do if not(hL<=0)then if hL==0X1 then Y=nil;else return Ke;end;else Ke=b(cA,Y);end;end;end;end;else local Xu=0X1;repeat if Xu~=0 then do Y=k(S(ab,dU,1));end;do Xu=0X0;end;else do return'';end;end;until(false);end;end;end);wU=0X5;else do G=X-0X1;end;wU=0;end;end;end;end;end;local B=(j-1);wU=0X0;local y=(nil);while wU<=0X00001 do do if wU~=0 then y=function(RB,BB,MB)local JB,uB=(RB/z[BB])%z[MB],0x0;repeat do if uB~=0X00000 then do return JB;end;else JB=JB-JB%0X1;uB=1;end;end;until false;end;do wU=2;end;else do local Mz,Iz=1,(nil);do while 0.8315213386801252 do if Mz==0X0 then for Zh=0X1,31 do local Ch=0x00;do while Ch<0x0002 do if Ch==0 then do(z)[Zh]=Iz;end;Ch=0x1;else Iz=Iz*lU;Ch=0X2;end;end;end;end;break;else Iz=2;Mz=0X0000;end;end;end;end;wU=0X1;end;end;end;local D,M=setfenv,(string.match);wU=0X1;local P,x,V=nil,nil,(nil);repeat if wU<=0X00000 then do x={[0X0]={[0X0]=0X000,0X00001,2,3,4,0x5,CU,7,8,0X00009,0X00A,0X000B,12,13,YU,15},{[0X0]=1,0X00000,3,2,qU,0x004,0X7,6,0X9,0x8,11,FU,13,jU,0X0F,0Xe},{[0X0]=2,0X3,0X0000,1,6,7,0X4,0X00005,10,11,0x8,9,0Xe,15,0X0C,0XD},{[0]=0x3,0X2,0X00001,0X0,0X7,0x0006,0X5,4,XU,0X000a,9,0x8,0XF,14,13,12},{[0X0]=0x00004,0X0005,0x0006,7,0X0,1,lU,0X3,12,13,14,0xf,0X08,0X09,10,0XB},{[0X0]=0X00005,0X4,0X007,6,1,0x0,0X03,0X2,0xd,0Xc,hU,14,9,0x008,0XB,FU},{[0]=CU,7,0x4,0X05,2,0X3,0,0X01,0Xe,0x0000f,jU,13,0xa,0Xb,8,9},{[0x0]=GU,6,0X5,0X004,0X3,0X2,1,0X0,0x0f,YU,13,0XC,11,0X000a,0X9,8},{[0]=0x8,0X00009,0X0A,11,0XC,13,0X00E,15,0x0,1,2,0X00003,4,0x0005,6,0X00007},{[BU]=0X009,zU,0X00b,10,13,0Xc,0x0F,YU,0X001,BU,0x00003,0X002,5,0X00004,7,CU},{[0X00000]=10,11,0X8,9,14,15,0Xc,0X0d,0X2,0X00003,0,1,6,7,0X4,0X00005},{[BU]=XU,10,9,0X008,15,0XE,13,12,3,lU,1,0X0000,0X00007,CU,5,0X04},{[0]=12,0XD,YU,15,0x00008,0X9,10,XU,4,5,0X0006,GU,0,1,0X0002,3},{[0X00]=13,12,15,YU,0X9,8,0xB,10,0x5,4,7,6,1,0,3,0X2},{[BU]=0XE,0X0F,0XC,0Xd,10,0XB,0X8,0X009,0X6,GU,4,0X5,2,3,0x00000,0X1},{[0]=15,0xE,13,0X0000c,0X00b,10,9,0x8,7,0X6,0X5,4,3,0X02,1,0X0}};end;do wU=2;end;else if wU==1 then do P=function()local mV,nV,HV=0x01,nil,(nil);repeat if not(mV<=0)then if mV==0x1 then do nV,HV=F(),F();end;do mV=0;end;else return HV*X+nV;end;else if not(HV>=j)then else HV=HV-X;end;mV=2;end;until(false);end;end;wU=0;else V=function()local T2=0X4;local o2,v2,b2,u2,R2,U2=nil,nil,nil,nil,nil,nil;while(true)do do if T2<=0X0003 then if T2<=0x01 then if T2~=0 then do b2=(-1)^y(v2,0x01F,1);end;T2=6;else return b2*(2^(u2-1023))*(U2/h+R2);end;else do if T2~=2 then R2=1;do T2=5;end;else do if o2==0X0 and v2==0 then return 0X0;end;end;T2=1;end;end;end;else do if T2<=0x5 then if T2~=0X00004 then U2=y(v2,0X0,20)*X+o2;T2=7;else o2=F();T2=8;end;else if not(T2<=0X6)then if T2~=0x0007 then v2=F();do T2=2;end;else if u2==0 then if U2==0x00000 then return b2*0;else do for Co=0,1 do do if Co~=0 then R2=0X0;else u2=1;end;end;end;end;end;elseif u2==yU then if U2==0x0 then do return b2*(0/0);end;else do return b2*(1/0x0);end;end;end;T2=0;end;else u2=y(v2,0x00014,11);T2=3;end;end;end;end;end;end;end;do wU=3;end;end;end;until wU>0X2;local T=f and f.bxor or function(tt,st)local at=(0);local kt,Yt=nil,nil;repeat if not(at<=0X2)then if not(at<=0X00003)then if at~=0X4 then Yt=BU;do at=0X0003;end;else kt=0X00001;at=0X1;end;else while tt>0 and st>0 do local zA,RA=nil,nil;for VL=0,1 do do if VL~=0 then RA=st%0x0010;else zA=tt%16;end;end;end;Yt=Yt+x[zA][RA]*kt;local VA=0x0;repeat do if VA<=0 then tt=(tt-zA)/16;VA=1;else if VA~=0X00001 then kt=kt*0x10;do VA=0X3;end;else do st=(st-RA)/16;end;do VA=0x2;end;end;end;end;until VA==0X3;end;at=0X2;end;else if at<=0 then tt=tt%X;do at=4;end;else if at==1 then st=st%X;at=5;else return Yt+tt*kt+st*kt;end;end;end;until false;end;local I=f and f.band or function(du,fu)local ru=0X1;while true do if not(ru<=0X0)then if ru==1 then du=du%X;ru=0X000;else do return((du+fu)-T(du,fu))/2;end;end;else do fu=fu%X;end;do ru=2;end;end;end;end;local v=f and f.bor or function(fb,Ib)do fb=fb%X;end;local mb=(0X0);while true do if mb==0X0 then Ib=Ib%X;mb=0X001;else return G-I(G-fb,G-Ib);end;end;end;local s=f and f.bnot or function(Zj)return G-(Zj%X);end;local R,Z,o,w=f and f[PU],f and f[VU],assert,{lU,0X5,4};R=R or function(U1,w1)local X1=(1);while""do do if not(X1<=0X0)then if X1==1 then if not(w1>=32)then else do return 0;end;end;X1=0;else return(U1*z[w1])%X;end;else if not(w1<0X00000)then else return Z(U1,-w1);end;do X1=0X2;end;end;end;end;end;local Q=(unpack or xU);wU=0X3;local e,i,r=nil,nil,(nil);repeat do if not(wU<=0x00001)then if wU==2 then i=function()local Kz=(0X0);local Lz=(0);repeat local f6=(u(C,l,l));l=l+0x01;Lz=v(Lz,R(I(f6,127),Kz));if I(f6,128)==0 then return Lz;end;Kz=Kz+0X00007;until false;end;wU=0X00000;else Z=Z or function(u6,D6)if D6>=0X00020 then do return 0x000;end;end;if not(D6<0)then else return R(u6,-D6);end;local v6,f6=0X1,(nil);do repeat do if v6==0 then do return f6-f6%0X1;end;else do f6=(u6%X/z[D6]);end;v6=0X0;end;end;until false;end;end;wU=0X1;end;else if wU==0X000 then r=fU;wU=0x4;else e={[7]=2,[0X0006]=0X00,[0]=0X00007,[0X1]=6,[4]=1,[0x00005]=6,[0X6]=1,[2]=7};do wU=2;end;end;end;end;until wU==0X4;local E=function()local vM=(nil);for L3=0,0x1 do if L3==0X0 then do vM=i();end;elseif not(vM>B)then else do return vM-X;end;end;end;return vM;end;local U=q();local oU=(q());local cU=function(cG)local qG=2;local lG,tG,TG=nil,nil,(nil);repeat if not(qG<=0)then if qG==0X1 then do tG=T(lG[dU],oU);end;qG=0;else lG={u(C,l,l+3)};qG=1;end;else do TG=T(lG[2],oU);end;break;end;until false;local pG=(T(lG[3],oU));local xG=T(lG[4],oU);qG=0;repeat if not(qG<=0)then if qG~=1 then l=l+0X4;qG=0X01;else return xG*0X001000000+pG*0x10000+TG*TU+tG;end;else oU=(0X00007D*oU+cG)%256;qG=2;end;until(false);end;local JU=function(...)return c("#",...),{...};end;wU=1;local kU,LU=nil,(nil);while wU~=2 do do if wU~=0X0 then kU=function(Nd)local ld,Vd,Td=4,nil,nil;while true do if ld<=1 then if ld==0X0 then return Td;else Td="";do ld=0x02;end;end;else do if not(ld<=2)then if ld==0X0003 then l=l+Vd;ld=0;else Vd=F();ld=0x01;end;else do for uo=1,Vd,7997 do local Vo=uo+7997-1;do if not(Vo>Vd)then else Vo=Vd;end;end;local Wo,zo=0x00,(nil);while 1440796861 do if Wo<=0X0 then zo={u(C,l+uo-0X1,l+Vo-dU)};Wo=2;else do if Wo~=0X1 then for wC=dU,#zo do(zo)[wC]=T(zo[wC],U);U=(Nd*U+0xfF)%256;end;Wo=0X1;else Td=Td..m(Q(zo));break;end;end;end;end;end;end;ld=0X00003;end;end;end;end;end;do wU=0X0;end;else LU={};do wU=0x0002;end;end;end;end;wU=1;local WU,SU,uU=nil,nil,nil;do while wU<4 do do if not(wU<=1)then if wU~=0X2 then wU=0X0002;else function SU(UO,LO,SO)local lO=(LO[0x9]);local KO=LO[0x3];local dO=LO[0X002];local OO,RO=LO[0X4],(LO[0X0008]);local WO=LO[0x0005];local MO=LO[0x06];local cO=N({},{__mode="v"});local JO=LO[1];local hO=nil;hO=function(...)local zp=(1);local Bp=((d and d()or _ENV));local Tp={};local Vp,yp=JU(...);local op=(0X0);Vp=Vp-0X1;do for pR=0X0000,Vp do if not(lO>pR)then break;else Tp[pR]=yp[pR+0X1];end;end;end;(LU)[4]=LO;local bp=((Bp==a and UO or Bp));do(LU)[1]=Tp;end;if not RO then do yp=nil;end;elseif dO then(Tp)[lO]={n=Vp>=lO and Vp-lO+0x0001 or 0,Q(yp,lO+0x01,Vp+0X1)};end;if bp~=Bp then do if not(D)then _ENV=bp;else D(hO,bp);end;end;end;local Gp,Zp,kp,Yp=J(function()do while true do local l9=(KO[zp]);local Q9=(l9[0X3]);zp=zp+0X001;if not(Q9<42)then if not(Q9>=0X3f)then if not(Q9<0X034)then if Q9<57 then if Q9<54 then if Q9~=53 then Tp[l9[0x2]]=bp[l9[6]];else(Tp[l9[2]])[l9[6]]=l9[1];end;else if not(Q9<55)then do if Q9==0X38 then(Tp)[l9[0X0002]]=Tp[l9[0X5]]%Tp[l9[0X0004]];else LU[l9[5]]=Tp[l9[0X02]];end;end;else local iK=(l9[2]);local aK,JK,zK=Tp[iK]();if aK then Tp[iK+0X00001]=JK;Tp[iK+2]=zK;zp=l9[0X5];end;end;end;else do if not(Q9>=60)then if not(Q9>=0x0003A)then local OP=l9[0x2];do op=OP+l9[0X5]-0X1;end;Tp[OP](Q(Tp,OP+0x1,op));do op=OP-1;end;else if Q9~=0X3b then Tp[l9[0X2]]=Tp[l9[0X0005]][Tp[l9[4]]];else local W_=l9[2];(Tp)[W_]=Tp[W_](Q(Tp,W_+1,op));do op=W_;end;end;end;else do if not(Q9<0X3d)then if Q9~=62 then Tp[l9[2]]=Z(Tp[l9[0X5]],Tp[l9[4]]);else Tp[l9[0X2]]=Tp[l9[5]]-Tp[l9[0X4]];end;else local Gl=(l9[0X2]);local Xl,Al,ul,Tl,hl,Sl=Tp[Gl]();if Xl then Tp[Gl+0x00001]=Al;(Tp)[Gl+0X2]=ul;Tp[Gl+3]=Tl;Tp[Gl+0x4]=hl;(Tp)[Gl+0x05]=Sl;do zp=l9[0X5];end;end;end;end;end;end;end;else if not(Q9<0X0002f)then if not(Q9<49)then do if not(Q9>=50)then local ah=(l9[0X2]);(Tp[ah])(Tp[ah+1],Tp[ah+0X02]);do op=ah-0X1;end;else if Q9~=51 then(Tp)[l9[0x2]]=I(Tp[l9[5]],Tp[l9[0X04]]);else local Rh=(l9[0X2]);local eh=Tp[Rh+0X02];local ah=(Tp[Rh]+eh);Tp[Rh]=ah;if not(eh>0X0)then if ah>=Tp[Rh+0X1]then zp=l9[5];(Tp)[Rh+3]=ah;end;else if ah<=Tp[Rh+1]then zp=l9[5];Tp[Rh+0x0003]=ah;end;end;end;end;end;else if Q9~=48 then(Tp)[l9[0X00002]]=Tp[l9[5]]<Tp[l9[0X4]];else local nD=(l9[5]);local RD=Tp[nD];do for vZ=nD+1,l9[4]do do RD=RD..Tp[vZ];end;end;end;(Tp)[l9[0X00002]]=RD;end;end;else if Q9>=0X0002c then if Q9>=45 then if Q9~=46 then do(Tp)[l9[0x002]]=s(Tp[l9[5]]);end;else do Tp[l9[2]]=Tp[l9[0X5]]==Tp[l9[4]];end;end;else do(Tp)[l9[0X2]]=false;end;end;else do if Q9==43 then local bb=Tp[l9[0X5]];local yb=(l9[0X2]);(Tp)[yb+0X1]=bb;Tp[yb]=bb[l9[1]];else do Tp[l9[0x2]]=Tp[l9[5]]~=Tp[l9[4]];end;end;end;end;end;end;else do if not(Q9<0X49)then do if Q9<0X4E then do if Q9>=0X0004B then do if not(Q9>=76)then local Vt=l9[2];Tp[Vt]=Tp[Vt](Tp[Vt+0x1]);op=Vt;else if Q9~=77 then if l9[0X4]==221 then zp=zp-1;KO[zp]={[3]=0X6,[5]=(l9[0x5]-0X74),[2]=(l9[0X2]-116)};else(Tp)[l9[2]]=#Tp[l9[5]];end;else Tp[l9[0X2]]=Tp[l9[5]]>Tp[l9[0X4]];end;end;end;else if Q9~=0x4A then(bp)[l9[0X00006]]=Tp[l9[0x002]];else(Tp)[l9[2]]=Tp[l9[0X0005]]*Tp[l9[4]];end;end;end;else do if not(Q9<0X0051)then if Q9<0X52 then repeat local dR,BR=cO,Tp;if#dR>0 then local lM=({});do for Zq,kq in t,dR do for vi,gi in t,kq do do if gi[0X1]==BR and gi[0X2]>=0X0 then local Xd=(gi[0X2]);if not lM[Xd]then lM[Xd]={BR[Xd]};end;(gi)[1]=lM[Xd];do gi[0X2]=1;end;end;end;end;end;end;end;until true;return true,l9[0X002],0X1;else if Q9~=83 then(Tp)[l9[0X02]]=Tp[l9[0X5]]^Tp[l9[0X4]];else if Tp[l9[0X02]]then zp=l9[5];end;end;end;else if Q9>=0X4f then do if Q9~=0X50 then if not(Tp[l9[0X5]]<Tp[l9[4]])then zp=l9[2];end;else Tp[l9[2]]=Tp[l9[5]]~=l9[1];end;end;else if Tp[l9[0x5]]<=Tp[l9[4]]then do zp=l9[0X2];end;end;end;end;end;end;end;else if Q9>=0X00044 then if Q9>=70 then do if Q9>=71 then do if Q9~=72 then local eM=(l9[0x2]);local RM=(r(function(...)(g)();for y2,F2 in...do(g)(true,y2,F2);end;end));(RM)(Tp[eM],Tp[eM+1],Tp[eM+0X2]);op=eM;(Tp)[eM]=RM;zp=l9[5];else(Tp)[l9[2]]=-Tp[l9[5]];end;end;else do if Tp[l9[5]]~=Tp[l9[0X4]]then do zp=l9[2];end;end;end;end;end;else do if Q9~=0X45 then Tp[l9[2]]={};else if Tp[l9[5]]~=l9[0X1]then do zp=l9[2];end;end;end;end;end;else if Q9<0X41 then if Q9~=64 then do(Tp)[l9[0x2]]={Q({},1,l9[5])};end;else if l9[4]==0X32 then zp=zp-0X01;do(KO)[zp]={[3]=0X06,[0X02]=(l9[0X00002]-0Xfd),[0X5]=(l9[0X5]-0Xfd)};end;elseif l9[4]==246 then zp=zp-1;KO[zp]={[0X2]=(l9[0X2]-11),[0X5]=(l9[0X0005]-11),[3]=33};else if not(not Tp[l9[2]])then else zp=l9[0X5];end;end;end;else if not(Q9<66)then if Q9~=67 then if l9[0X4]~=148 then do(Tp)[l9[2]]=yp[lO+1];end;else zp=zp-1;KO[zp]={[3]=40,[2]=(l9[2]-0X19),[5]=(l9[0X5]-0x00019)};end;else local O8=(SO[l9[5]]);(Tp)[l9[2]]=O8[1][O8[0X2]];end;else local E0=l9[4];local k0=l9[2];local p0=l9[5];if p0~=0X0 then op=k0+p0-1;end;local q0,D0=nil,nil;if p0==1 then q0,D0=JU(Tp[k0]());else q0,D0=JU(Tp[k0](Q(Tp,k0+0x001,op)));end;if E0==0X1 then do op=k0-1;end;else if E0~=0 then q0=k0+E0-0X2;op=q0+0X1;else q0=q0+k0-1;do op=q0;end;end;local V2=0X0;do for t1=k0,q0 do V2=V2+1;do Tp[t1]=D0[V2];end;end;end;end;end;end;end;end;end;end;else if not(Q9>=0X15)then if not(Q9>=0x0000A)then if not(Q9<0X5)then do if not(Q9<0X00007)then do if not(Q9<8)then if Q9~=9 then Tp[l9[2]][Tp[l9[0X5]]]=l9[1];else repeat local uM,NM=cO,Tp;if#uM>0X0 then local Jm=({});do for Mg,Og in t,uM do for WR,AR in t,Og do if not(AR[0X001]==NM and AR[2]>=0)then else local rP=(AR[0X2]);if not(not Jm[rP])then else(Jm)[rP]={NM[rP]};end;(AR)[1]=Jm[rP];AR[2]=0x01;end;end;end;end;end;until true;return true,l9[0X2],0X0;end;else zp=l9[0X5];end;end;else if Q9==6 then do if l9[0X4]==0X009B then do zp=zp-0X00001;end;(KO)[zp]={[5]=(l9[5]-87),[3]=0x029,[0X2]=(l9[2]-87)};else(Tp)[l9[2]]=Tp[l9[5]];end;end;else do Tp[l9[0X2]]=true;end;end;end;end;else if not(Q9<0x002)then do if Q9<3 then Tp[l9[0X02]]=l9[0X6];else if Q9==0X4 then local k_=l9[2];Tp[k_](Q(Tp,k_+0X0001,op));do op=k_-0X1;end;else Tp[l9[2]]=Tp[l9[0X0005]]/Tp[l9[0X4]];end;end;end;else if Q9==0X1 then op=l9[2];Tp[op]();op=op-1;else(Tp)[l9[2]]=Tp[l9[5]]+Tp[l9[0X4]];end;end;end;else if Q9>=0XF then if Q9>=18 then if Q9<0X13 then local Vg=l9[2];local wg=(l9[0X4]-1)*50;local Wg=Tp[Vg];for pq=0X0001,l9[0X00005]do Wg[wg+pq]=Tp[Vg+pq];end;else if Q9==0X14 then if not(Tp[l9[0X0005]]<Tp[l9[4]])then else zp=l9[2];end;else if l9[0X00004]==140 then do zp=zp-1;end;(KO)[zp]={[2]=(l9[0X00002]-166),[0X003]=6,[0X5]=(l9[5]-0X00A6)};else repeat local WH,fH=cO,Tp;if not(#WH>0X0)then else local gx={};for zv,dv in t,WH do for Aq,Mq in t,dv do if Mq[0X1]==fH and Mq[2]>=0X000 then local Lo=(Mq[0x2]);if not gx[Lo]then gx[Lo]={fH[Lo]};end;(Mq)[0X1]=gx[Lo];Mq[0X0002]=1;end;end;end;end;until true;return false,l9[0X2],op;end;end;end;else if not(Q9>=0X10)then local bh,uh=l9[2],((l9[0X4]-1)*0x000032);local ch=(Tp[bh]);for Xo=1,op-bh do ch[uh+Xo]=Tp[bh+Xo];end;else if Q9~=17 then if not(Tp[l9[5]]<=l9[0x00001])then zp=l9[0X2];end;else Tp[l9[2]]=Tp[l9[0x005]]<=Tp[l9[4]];end;end;end;else if Q9<0xc then if Q9~=11 then do if not(not(Tp[l9[5]]<=Tp[l9[4]]))then else zp=l9[0X02];end;end;else do(Tp[l9[0X02]])[Tp[l9[0X5]]]=Tp[l9[0X04]];end;end;else if Q9>=13 then do if Q9~=0X0e then do for Qh=l9[2],l9[0X5]do Tp[Qh]=nil;end;end;else Tp[l9[2]]=l9[0X06];end;end;else local em=(l9[0X2]);Tp[em]=Tp[em](Tp[em+0X001],Tp[em+2]);op=em;end;end;end;end;else do if not(Q9>=31)then if not(Q9>=26)then if not(Q9<23)then do if Q9>=24 then do if Q9==25 then local ek=(l9[2]);(Tp[ek])(Tp[ek+1]);op=ek-0X1;else if l9[0x00004]~=0Xd7 then local If=(l9[2]);do for bD=If,If+(l9[0X0005]-0X0001)do Tp[bD]=yp[lO+(bD-If)+1];end;end;else zp=zp-0x00001;do KO[zp]={[0X0003]=0X28,[2]=(l9[0X00002]-0X68),[0X5]=(l9[0X05]-104)};end;end;end;end;else Tp[l9[2]][l9[0X6]]=Tp[l9[4]];end;end;else if Q9~=22 then local c4=(l9[2]);local g4=r(function(...)g();do for JA,UA,sA,eA,pA in...do(g)(true,JA,UA,sA,eA,pA);end;end;end);g4(Tp[c4],Tp[c4+1],Tp[c4+0X2]);op=c4;Tp[c4]=g4;zp=l9[5];else(Tp)[l9[0X2]]=R(Tp[l9[5]],Tp[l9[0X4]]);end;end;else if not(Q9>=28)then if Q9==27 then local xP=(WO[l9[5]]);local NP,FP=xP[7],nil;local zP=#NP;if zP>0 then FP={};for ym=1,zP do local vm=(NP[ym]);if vm[1]==0 then(FP)[ym-0X001]={Tp,vm[0X0002]};else FP[ym-0x1]=SO[vm[0x2]];end;end;A(cO,FP);end;do(Tp)[l9[0X2]]=SU(bp,xP,FP);end;else local Q3,H3=l9[0X2],l9[0X0005];op=Q3+H3-0x001;repeat local uO,iO=cO,Tp;if not(#uO>0)then else local AO={};for SN,PN in t,uO do for i1,e1 in t,PN do if e1[1]==iO and e1[0X2]>=0 then local sM=e1[0X2];do if not AO[sM]then AO[sM]={iO[sM]};end;end;e1[0X00001]=AO[sM];(e1)[0x2]=0x01;end;end;end;end;until true;return true,Q3,H3;end;else do if Q9>=29 then if Q9==0X1E then Tp[l9[0x00002]]=T(Tp[l9[5]],Tp[l9[4]]);else(Tp)[l9[2]]=Tp[l9[5]]>=Tp[l9[0x4]];end;else(Tp)[l9[2]]=LU[l9[5]];end;end;end;end;else do if Q9>=36 then if Q9>=39 then do if Q9<0X0028 then local vr=(SO[l9[0X0005]]);(vr[0X1])[vr[0x2]]=Tp[l9[0X2]];else do if Q9~=41 then if l9[0X4]==0X6f then zp=zp-1;(KO)[zp]={[3]=32,[0x00005]=(l9[0X00005]-0X45),[2]=(l9[0X2]-69)};else local xL,gL=l9[0X2],(Vp-lO);do if not(gL<0)then else gL=-1;end;end;for cN=xL,xL+gL do Tp[cN]=yp[lO+(cN-xL)+0X1];end;op=xL+gL;end;else if l9[4]==0X68 then zp=zp-0X0001;KO[zp]={[0X3]=76,[5]=(l9[0X5]-0X32),[0X2]=(l9[0X2]-0X32)};else Tp[l9[2]]=nil;end;end;end;end;end;else if Q9>=0X25 then if Q9~=0X26 then local J9=(l9[0X2]);local u9=J9+1;local v9=(J9+0X2);(Tp)[J9]=o(k(Tp[J9]),"\096fo\114\096\032i\110\105\116i\097l\032va\108ue\032m\117s\116\032b\101 a \110\117\109ber");(Tp)[u9]=o(k(Tp[u9]),"`for` limit value must be a number");(Tp)[v9]=o(k(Tp[v9]),'`\102or` s\116e\112 va\108ue\032\109u\115\116 \098e\032a n\117m\098e\114');Tp[J9]=Tp[J9]-Tp[v9];zp=l9[0X00005];else if Tp[l9[5]]~=Tp[l9[4]]then else do zp=l9[2];end;end;end;else Tp[l9[0X2]]=Tp[l9[5]][l9[0X01]];end;end;else if Q9<0X21 then do if Q9==0x20 then repeat local bk,pk=cO,(Tp);if#bk>0 then local df={};for zg,hg in t,bk do for t4,M4 in t,hg do if not(M4[0X1]==pk and M4[0X2]>=0X00000)then else local NN=M4[2];if not df[NN]then df[NN]={pk[NN]};end;(M4)[1]=df[NN];M4[0x2]=0X0001;end;end;end;end;until true;return;else Tp[l9[0X2]]=Tp[l9[5]]%l9[0x1];end;end;else do if not(Q9>=0x000022)then do repeat local qP,NP=cO,Tp;if not(#qP>0X0)then else local Qt={};do for Im,tm in t,qP do for T6,a6 in t,tm do if not(a6[0x1]==NP and a6[0X0002]>=0x0000)then else local sJ=a6[0X2];if not(not Qt[sJ])then else do Qt[sJ]={NP[sJ]};end;end;do a6[0X1]=Qt[sJ];end;(a6)[0X2]=0x1;end;end;end;end;end;until true;end;local Cf=l9[0X0002];return false,Cf,Cf+l9[0x5]-0X2;else do if Q9~=35 then do if Tp[l9[5]]==l9[0X1]then zp=l9[0X00002];end;end;else local W7=(l9[5]);(Tp)[l9[0X00002]]=Tp[W7]..Tp[W7+1];end;end;end;end;end;end;end;end;end;end;end;end;end;end);if Gp then if Zp then if Yp==0X0001 then do return Tp[kp]();end;else do return Tp[kp](Q(Tp,kp+1,op));end;end;elseif not(kp)then else return Q(Tp,kp,Yp);end;else if p(Zp)~='s\116ri\110\103'then L(Zp,0X0);else if not(M(Zp,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if M(Zp,"^.-\058\037\100+\058\032")then(L)("Lu\114aph\032Sc\114ipt:"..(OO[zp-1]or'\040i\110\116\101r\110a\108\041')..':\032'..W(Zp),0);else L(Zp,0);end;end;end;end;if not(D)then else(D)(hO,UO);end;return hO;end;wU=0;end;elseif wU~=0x0 then WU=0X00001;wU=0X3;else function uU()local nV,AV,bV=nil,nil,(nil);local uV=(0X0);repeat if uV<=1 then if uV~=0X0 then AV={IU,nil,{},{},{},IU,IU,IU,IU};uV=3;else nV={};uV=1;end;else if uV~=0x2 then bV=q();uV=2;else AV[0X0008]=y(bV,0X1,1)~=0;uV=4;end;end;until uV>3;uV=0;local WV=nil;while(true)do do if uV<=1 then do if uV~=0 then WV={};uV=3;else AV[0X002]=y(bV,2,0x1)~=0x000;do uV=2;end;end;end;else do if uV==0X00002 then AV[12]=q();uV=0X1;else AV[0x13]=F();break;end;end;end;end;end;local FV=(AV[0x3]);local qV=(nil);for Bh=0,0X00002 do if not(Bh<=0)then if Bh==1 then for eJ=0X1,qV do FV[eJ]={[6]=q(),[0X5]=E(),[4]=E(),[0X00003]=i(),[dU]=q(),[0X02]=E(),[0x7]=q()};end;else AV[0x9]=i();end;else qV=F()-0x000010a75;end;end;local MV=({});(AV)[18]=F();local cV,TV=AV[0x0005],(dU);do uV=0X3;end;local gV,zV,NV,YV=nil,nil,nil,nil;do while(true)do if not(uV<=1)then if uV<=2 then NV=q();uV=0X01;else if uV~=3 then zV=F()-43174;uV=2;else do gV=F()-0X17370;end;uV=0x0;end;end;else if uV==0X0 then for BC=BU,gV-1 do do cV[BC]=uU();end;end;uV=0X4;else YV=q()~=0X00000;break;end;end;end;end;for kh=0x00,2 do if not(kh<=0X0)then if kh~=1 then AV[15]=F();else do(AV)[0X11]=q();end;end;else do for dC=0X1,zV do local PC,nC=nil,(nil);for Kw=0,3 do do if Kw<=1 then if Kw==0X0 then PC=IU;else nC=q();end;else do if Kw==0X0002 then nV[dC-0x1]=TV;else if nC==vU then PC=S(kU(NV),V()+F());elseif nC==64 then PC=S(kU(NV),0X14);elseif nC==0X7E then do PC=P();end;elseif nC==170 then PC=sU;elseif nC==0X28 then do PC=S(kU(NV),0X14);end;elseif nC==1 then PC=false;elseif nC==RU then PC=V();elseif nC==219 then do PC=S(kU(NV),0X2);end;elseif nC==0x00097 then PC=S(kU(NV),V()+F());end;end;end;end;end;end;local IC={PC,{}};do WV[TV]=IC;end;local rC=(1);do while(true)do if rC~=0x000 then TV=TV+dU;rC=0X0;else if YV then do pU[WU]=IC;end;WU=WU+1;end;break;end;end;end;end;end;end;end;AV[1]=i();do for Cq=dU,qV do local aq=nil;for Q4=0,0X001 do if Q4==0X0000 then do aq=AV[0x3][Cq];end;else for sg,Zg in ZU(w)do local wg=(e[Zg]);local dg=aq[wg];if dg==0X1 then local SL,mL,NL=2,nil,nil;while SL~=0X3 do if SL<=0X00 then do if not(NL)then else do(aq)[wg]=NL[1];end;local mF=(NL[0X2]);(mF)[#mF+0X01]={aq,wg};end;end;do SL=0X3;end;else do if SL==0x1 then NL=WV[mL];SL=0x0;else mL=nV[aq[Zg]];do SL=0x00001;end;end;end;end;end;elseif dg==12 then(aq)[Zg]=Cq+aq[Zg]+1;end;end;end;end;end;end;do uV=1;end;local oV=(nil);repeat if uV<=2 then do if uV<=0 then AV[0x06]=i();uV=0X5;else do if uV~=1 then for DG=1,i()do(MV)[DG]={q(),i()};end;uV=0X4;else do AV[7]=MV;end;uV=2;end;end;end;end;else do if not(uV<=0X00004)then do if uV==0X5 then do return AV;end;else do for Iw=0X0001,oV do local kw=F();local lw,dw=nil,(nil);for JE=0,2 do if JE<=0 then lw=F();else do if JE~=0X1 then do for tL=kw,lw do(AV[0X4])[tL]=dw;end;end;else dw=F();end;end;end;end;end;end;do uV=0;end;end;end;else if uV==0x3 then do oV=F();end;uV=0X6;else do AV[15]=F();end;uV=3;end;end;end;end;until(false);end;wU=0X4;end;end;end;end;local mU=(uU());(LU)[3]=pU;do pU=nil;end;return SU(a,mU,IU)(...);end)(next,coroutine,error,0X6c,12,_ENV,5,nil,string,"lsh\105f\116",pcall,15,0x000A,tonumber,string.byte,6,"..",'\114s\104ift',2047,rawset,string.sub,256,select,coroutine.wrap,0X001,54,string.rep,0X07,0,table.unpack,ipairs,8,true,0X002,0xb,type,14,...);
