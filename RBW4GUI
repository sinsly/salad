-- This file was generated using Luraph Obfuscator v13.5.4

do return(function(Kh,Zh,sh,oh,ch,dh,Ph,rh,Qh,Mh,Jh,Ah,eh,Vh,th,Hh,yh,ah,gh,vh,Wh,Rh,mh,Oh,nh,Th,Eh,Lh,ih,Yh,ph,zh,Nh,Sh,Xh,Ch,Bh,...)local U=(Sh);local u,wh,f,F=pcall,0,nil,nil;while wh<0X0002 do if wh~=0 then F=Th;do wh=0X002;end;else f=Rh;wh=1;end;end;local q=tonumber;local x=error;do wh=1;end;local R,j,S,T,hh=nil,nil,nil,nil,(nil);do while wh~=0X5 do if not(wh<=0X0001)then if not(wh<=0X2)then do if wh==3 then hh=1;wh=5;else j=nh;wh=0X2;end;end;else S=vh;wh=0X0;end;elseif wh~=0x0000 then do R=zh;end;wh=0X0004;else do T=string.match;end;wh=3;end;end;end;local y,X,e,K,k=nil,nil,nil,nil,(nil);local v,A=ph,rawset;do for JK=0x0,0X00005 do do if JK<=2 then do if JK<=0X000 then y=coroutine.wrap;else do if JK==1 then do X=(Ah or eh);end;else e=yh;end;end;end;end;elseif not(JK<=0x3)then do if JK~=0X04 then k=Kh;else end;end;else K=coroutine.yield;end;end;end;end;local d,V={[0X0]=Lh},(getfenv);local M=((V and V()or _ENV));wh=1;local E,r,Q,J,a=nil,nil,nil,nil,(nil);repeat if wh<=0x2 then if not(wh<=0)then if wh==0x0001 then wh=5;else a=function()local Ps=(nil);for ub=0X00,0X00002 do if ub<=0 then Ps=j(E,r,r);else if ub~=0X1 then return Ps;else r=r+0X001;end;end;end;end;wh=7;end;else do r=0X00001;end;wh=0x00006;end;else if wh<=0X4 then do if wh==3 then do E=R(k(E,Ch),"..",function(RP)if j(RP,2)==0X000048 then for gn=0,0X1 do do if gn~=0X00 then return"";else J=q(k(RP,1,0X0001));end;end;end;else local em=(f(q(RP,16)));do if not(J)then return em;else local Du=nil;do for nE=0,0x2 do do if not(nE<=0)then if nE~=1 then return Du;else do J=nil;end;end;else Du=S(em,J);end;end;end;end;end;end;end;end);end;wh=2;else wh=3;end;end;else if wh~=5 then do Q=0X0100000000;end;wh=4;elsedo wh=0x0;end;end;end;end;until wh==0X00007;local L,H=unpack or Vh,2147483648;local Z=Q-1;wh=0x00001;local m,s=nil,nil;while wh~=2 do do if wh==0X000 then s=H-1;do wh=2;end;else do m=Mh^rh;end;wh=0X00000;end;end;end;do local nk,ck=0,nil;while nk~=2 do if nk~=0X0 then for xy=1,31 do(d)[xy]=ck;do ck=ck*2;end;end;nk=0X2;else ck=Mh;nk=0X0001;end;end;end;local Y=(function(Zp,tp,Ap)local xp=(nil);for Jo=0,0X2 do do if Jo<=0X0 then xp=(Zp/d[tp])%d[Ap];elseif Jo~=1 then do return xp;end;else xp=xp-xp%1;end;end;end;end);wh=0;local O,W=nil,(nil);while 0X4EFAACaC do if wh==0 then O=function()local DR,PR,xR,rR=j(E,r,r+3);r=r+0X4;return rR*0X1000000+xR*65536+PR*0X100+DR;end;wh=1;else W=function()local nA,mA,qA=0,nil,nil;do repeat if not(nA<=0x0)then if nA~=1 then if qA>=H then do qA=qA-Q;end;end;do nA=0X1;end;else return qA*Q+mA;end;else mA,qA=O(),O();do nA=0x00002;end;end;until false;end;end;break;end;end;local o,p={[0]={[0x0]=0x0000,Lh,0X2,0x3,4,0X5,0X6,7,0X0008,9,0x000A,11,0X0000C,0X000D,14,15},{[0X0]=1,0,0X3,0X002,0X0005,4,7,0X00006,9,0x8,0X00b,0XA,0X00D,Eh,15,0X00E},{[0]=0X2,3,Jh,0X00001,6,7,4,0X5,0Xa,11,8,9,14,0XF,Eh,0X0d},{[0X0]=ah,Mh,0X001,0,7,6,0X00005,0X4,0XB,0Xa,0x9,8,0xF,0Xe,13,0XC},{[0]=0X0004,5,0X6,7,0X0,0x1,2,0X3,0Xc,0XD,0xE,0Xf,0X8,9,10,0x0000B},{[0X000]=0X5,0X4,7,0X6,0X1,0x00000,3,Mh,0XD,0Xc,15,14,9,8,0x000B,0x00a},{[Jh]=0x006,0X7,4,0X5,2,0X3,Jh,1,14,0XF,12,0X00d,0XA,0Xb,0x008,0X9},{[0]=0X7,0X6,5,0x4,ah,0X0002,0X001,0X00000,15,0xe,13,12,0XB,0Xa,9,8},{[0X00000]=8,Oh,0Xa,11,0x0C,13,Hh,15,0,1,0X2,0X0003,0X4,5,0X6,7},{[0X000]=0X9,0X00008,Qh,0x000A,mh,Eh,0XF,0xe,0X1,0,ah,0X02,0X5,0X00004,7,0X6},{[0X0]=Zh,0x0000b,0X08,Oh,Hh,0XF,0X00c,mh,0x02,3,0X0,0x001,6,0X7,0X4,5},{[0]=0xB,0x0A,9,sh,15,0x00e,mh,0xC,0x00003,0X2,0X01,0x0,dh,Yh,0X0005,0X4},{[0X0]=0xc,13,0X0000E,0XF,0X08,0x9,10,Qh,0x4,0X005,0X6,7,0X000,1,0X002,0x003},{[0]=mh,12,15,0X0e,0X00009,8,11,0XA,5,4,dh,0X6,1,0x0,3,0X2},{[0X0]=14,15,0X00C,13,10,0x000b,8,9,Yh,7,4,0x5,2,0x3,0x00000,0X01},{[Jh]=15,14,0XD,Eh,11,10,0X0009,8,7,0X6,5,4,0x003,2,0x1,0}},rawget;local i=function()local gM,IM,qM,UM=0X2,nil,nil,nil;do while gM<=0x00003 do if not(gM<=1)then if gM~=2 then UM=(-Lh)^Y(qM,31,Lh);gM=4;else IM=O();do gM=0;end;end;else do if gM==0 then do qM=O();end;gM=1;else if IM==0X00000 and qM==0x0 then do return 0;end;end;gM=0X00003;end;end;end;end;end;local XM=(1);local GM=Y(qM,0X14,11);local RM=Y(qM,0,20)*Q+IM;if GM==0X000 then if RM~=0 then local Ym=(0X0);do while Ym<0X002 do do if Ym==0X0 then GM=1;do Ym=0x1;end;else XM=Jh;Ym=2;end;end;end;end;else return UM*0;end;else if GM==2047 then if RM~=0 then return UM*(0x1/0);else return UM*(0/0X0000);end;end;end;return UM*(0X2^(GM-0X3Ff))*(RM/m+XM);end;local N=X and X[Wh]or function(Lv,xv)local Sv,uv=nil,nil;do for G5=0X0,0x5 do if not(G5<=2)then if not(G5<=0x3)then if G5~=0X00004 then do return uv+Lv*Sv+xv*Sv;end;else do while Lv>0X000 and xv>0X0 do local Tq,oq=Lv%0X00010,(xv%0X000010);uv=uv+o[Tq][oq]*Sv;Lv=(Lv-Tq)/16;for za=0,0X1 do do if za==0X0 then do xv=(xv-oq)/16;end;else Sv=Sv*0x10;end;end;end;end;end;end;else uv=0x0;end;else if G5<=0X0 then Lv=Lv%Q;else do if G5~=1 then xv=xv%Q;else Sv=0x1;end;end;end;end;end;end;end;local g=(X and X.band or function(J_,G_)do J_=J_%Q;end;G_=G_%Q;return((J_+G_)-N(J_,G_))/0X00002;end);local h=tostring;local B=X and X.bor or function(Rj,hj)Rj=Rj%Q;local Mj=(0);while 0.23647640535468517 do if Mj~=0 then return Z-g(Z-Rj,Z-hj);else hj=hj%Q;Mj=1;end;end;end;local t,c=X and X.lshift,(X and X.rshift);local P=X and X.bnot or function(oF)return Z-(oF%Q);end;wh=0;local b=(nil);while wh<3 do if not(wh<=0)then do if wh~=1 then c=c or function(Cd,hd)if hd>=0X20 then return 0X0;end;if hd<0 then return t(Cd,-hd);end;local Pd=(Cd%Q/d[hd]);do return Pd-Pd%1;end;end;wh=1;else b={[0X8]=0X4,[0X0003]=0X0004,[0]=8,[5]=0X3,[0x1]=5,[0x4]=0X8,[0x7]=0x8,[8]=dh,[6]=2};wh=0X3;end;end;else do t=t or function(cg,Bg)if Bg>=0X20 then do return 0;end;end;for Yx=0,0X1 do if Yx==0X0 then do if not(Bg<0X0)then else return c(cg,-Bg);end;end;else do return(cg*d[Bg])%Q;end;end;end;end;end;wh=2;end;end;wh=0X1;local D,C=nil,nil;do while wh<=0X0001 do do if wh==0 then C=ih;wh=0X2;else D=function()local PU=0X00000;local QU=(0);do repeat local pS=j(E,r,r);do r=r+0x1;end;do PU=B(PU,t(g(pS,0X0007f),QU));end;if g(pS,128)~=0 then else do return PU;end;end;QU=QU+7;until false;end;end;do wh=0;end;end;end;end;end;local l=a();local z=(table.insert);local Fh=a();wh=5;local w,Uh,G,qh,uh,I,Ih=nil,nil,nil,nil,nil,nil,(nil);repeat if wh<=2 then do if not(wh<=0x0)then if wh~=1 then qh=function(RA)local FA=1;local EA,yA=nil,(nil);while FA~=0X3 do if not(FA<=0x000)then do if FA==1 then EA=O();FA=0;else for F3=1,EA,Xh do local p3,y3=F3+7997-0X01,0X0;local k3=(nil);while(true)do do if not(y3<=0X1)then if y3==0X2 then k3={j(E,r+F3-0X1,r+p3-0X00001)};y3=0X1;else yA=yA..f(L(k3));break;end;else if y3==0X0 then if p3>EA then p3=EA;end;do y3=0X2;end;else do for eZ=1,#k3 do k3[eZ]=N(k3[eZ],l);l=(RA*l+183)%0x100;end;end;y3=3;end;end;end;end;end;FA=0x3;end;end;else yA="";FA=0X2;end;end;r=r+EA;do return yA;end;end;wh=0;else do G=function()local Zq=(nil);do for R8=0,0X2 do do if R8<=0X00 then do Zq=D();end;else if R8==0X001 then if not(Zq>s)then else do return Zq-Q;end;end;else do return Zq;end;end;end;end;end;end;end;end;wh=2;end;else do uh=function(...)return U(Nh,...),{...};end;end;do wh=0x3;end;end;end;else if wh<=4 then do if wh==3 then I=gh;wh=0X6;else Uh=function(oO)local CO={j(E,r,r+ah)};local TO=(N(CO[0X001],Fh));local jO=(N(CO[0x2],Fh));local QO,nO,kO=0X02,nil,(nil);while(true)do if not(QO<=0X1)then if not(QO<=2)then do if QO==0X03 then kO=N(CO[0x0004],Fh);QO=0X4;else Fh=(109*Fh+oO)%0x000100;QO=0;end;end;else nO=N(CO[0X3],Fh);QO=3;end;else do if QO~=0 then return kO*oh+nO*0x000010000+jO*0X00100+TO;else r=r+0X4;QO=1;end;end;end;end;end;wh=1;end;end;else if wh~=0x00005 then do Ih={};end;break;else w={Yh,1,ah};wh=4;end;end;end;until(false);wh=1;local xh,kh,jh,fh=nil,nil,nil,nil;while wh<=0X006 do if not(wh<=0X002)then if not(wh<=4)then if wh==0X05 then fh=jh();wh=0X0002;else function jh()local ak=(1);local rk=nil;repeat if ak~=0X000 then ak=0;else do rk={nil,nil,nil,{},nil,Bh,{},Bh,{}};end;break;end;until(false);ak=2;local Dk,hk,xk,Pk,Fk=nil,nil,nil,nil,nil;do while ak<10 do if ak<=4 then if ak<=0X1 then if ak~=0X0 then do(rk)[13]=a();end;do ak=0x005;end;else(rk)[14]=O();do ak=1;end;end;else if not(ak<=0X0002)then if ak==3 then Fk=O()-39352;ak=0XA;else(rk)[3]=D();ak=0X3;end;else Dk={};do ak=7;end;end;end;else if not(ak<=0X0006)then if ak<=7 then hk={};ak=0X0;else if ak~=0X8 then Pk=1;ak=0X0008;else do for pu=0x00001,xk do local uu,wu,qu=nil,nil,(nil);local xu=(0X0000);repeat if xu<=0x1 then if xu~=0X0 then wu=O();xu=3;else uu=O();xu=0X1;end;else if xu~=0X2 then qu=O();xu=2;else do for DX=uu,wu do do(rk[0X00009])[DX]=qu;end;end;end;xu=0X4;end;end;until xu>=0X4;end;end;ak=6;end;end;else if ak==0x0005 then xk=O();do ak=9;end;else rk[0X000d]=O();do ak=4;end;end;end;end;end;end;ak=0;local Yk,Qk=nil,(nil);while ak<0X2 do if ak~=0 then Qk=a()~=0;ak=0x00002;else Yk=a();ak=0X1;end;end;local Hk=(rk[0x4]);ak=2;local vk,nk=nil,(nil);do repeat if ak<=0x0000 then nk=O()-0X9e15;ak=0X003;else if ak~=0x1 then for Pm=1,Fk do local wm=nil;local sm=a();(hk)[Pm-1]=Pk;local dm=(nil);for V4=0,1 do if V4==0x0000 then do if sm==202 then wm=Ph;elseif sm==158 then wm=W();elseif sm==161 then do wm=false;end;elseif sm==106 then wm=k(qh(Yk),i()+O());elseif sm==0X000083 then wm=i();elseif sm==0X048 then do wm=i();end;elseif sm==0x08b then do wm=O();end;elseif sm==0Xb3 then wm=W();elseif sm==0x8C then wm=i();elseif sm==232 then wm=i()+O();elseif sm==0x3c then wm=i()+O();elseif sm~=123 then else do wm=k(qh(Yk),0X00003);end;end;end;else dm={wm,{}};end;end;Dk[Pk]=dm;do Pk=Pk+1;end;if not(Qk)then else Ih[hh]=dm;hh=hh+1;end;end;ak=1;else do vk={};end;ak=0X0;end;end;until ak>2;end;for XB=1,nk do(Hk)[XB]={[5]=a(),[1]=G(),[0x4]=a(),[3]=G(),[6]=G(),[7]=D(),[0X2]=a()};end;rk[16]=O();do(rk)[0X10]=O();end;do(rk)[2]=D();end;(rk)[8]=vk;for rF=1,D()do do vk[rF]={a(),D()};end;end;do ak=0;end;local Vk=nil;while ak<0X3 do if ak<=0X0 then(rk)[0X00005]=D();ak=0X1;else if ak~=1 then Vk=O()-th;do ak=3;end;else for Lv=1,nk do local cv=(nil);local Jv=(0x001);while(true)do if Jv==0x0 then do for v0,O0 in ipairs(w)do local p0,E0,e0=0x0,nil,(nil);while p0<2 do if p0~=0X0 then do e0=cv[E0];end;p0=0X002;else E0=b[O0];p0=1;end;end;do if e0==0Xa then local Uk,Zk,tk=0,nil,(nil);while(true)do do if Uk<=0X0000 then Zk=hk[cv[O0]];Uk=1;else if Uk==1 then tk=Dk[Zk];Uk=2;else if tk then local Xc=(nil);do for iL=0x000,0X2 do do if iL<=0X0000 then cv[E0]=tk[0X1];else do if iL==0X001 then Xc=tk[2];else do Xc[#Xc+1]={cv,E0};end;end;end;end;end;end;end;end;break;end;end;end;end;elseif e0~=1 then else(cv)[O0]=Lv+cv[O0]+1;end;end;end;end;break;else cv=rk[0x4][Lv];Jv=0;end;end;end;ak=0x002;end;end;end;local ok=rk[0X7];do ak=5;end;local ek=(nil);while(true)do do if ak<=3 then if not(ak<=0X01)then if ak~=0X00002 then do ek=a();end;do ak=7;end;else do(rk)[0X000012]=O();end;do ak=0X00000;end;end;else do if ak~=0x00000 then do rk[0XF]=a();end;ak=0X3;else return rk;end;end;end;else if not(ak<=0X5)then if ak<=0x6 then rk[ch]=O();ak=2;else if ak==7 then(rk)[6]=Y(ek,Lh,1)~=0X00000;ak=8;else rk[0X1]=Y(ek,2,1)~=0X0;do ak=0X0006;end;end;end;else if ak~=4 then do for L4=Jh,Vk-1 do do(ok)[L4]=jh();end;end;end;ak=0X04;else do(rk)[15]=a();end;ak=1;end;end;end;end;end;end;wh=0X5;end;else if wh==0X00003 then wh=4;else function kh(nr,Dr,sr)local Br=(nr[0X1]);local ar,Mr,kr=nr[3],nr[0X00009],nr[6];local ur=(nr[0x4]);local jr=nr[0X7];local Rr=nr[2];local Gr=(v({},{__mode='v'}));local pr,Cr=nr[0X00005],(nil);Cr=function(...)local AU=(1);local BU=((V and V()or _ENV));local NU=(BU==M and sr or BU);local EU={};local KU,wU=uh(...);KU=KU-0X1;for eX=0X00,KU do do if not(Rr>eX)then break;else do EU[eX]=wU[eX+0X1];end;end;end;end;do(xh)[0X4]=nr;end;(xh)[1]=EU;local DU=0;if not kr then wU=nil;elseif Br then EU[Rr]={n=KU>=Rr and KU-Rr+1 or 0x0,L(wU,Rr+1,KU+0X1)};end;if NU~=BU then if C then(C)(Cr,NU);else _ENV=NU;end;end;local iU,HU,RU,nU=u(function()do while true do local Ls=(ur[AU]);local Es=(Ls[0x7]);AU=AU+1;if Es<42 then if not(Es>=21)then if Es<10 then if not(Es<5)then if Es>=0x7 then if Es>=8 then do if Es~=0X9 then EU[Ls[0X06]]=EU[Ls[1]]+EU[Ls[0x03]];else EU[Ls[0X6]]=-EU[Ls[1]];end;end;else EU[Ls[6]]=false;end;else if Es~=6 then(EU)[Ls[0x6]]=B(EU[Ls[1]],EU[Ls[3]]);else EU[Ls[0X6]]=EU[Ls[1]]<=EU[Ls[3]];end;end;else if Es>=2 then if not(Es<3)then if Es~=0X4 then local xy,dy=KU-Rr,(Ls[6]);if not(xy<0x000)then else xy=-1;end;for cU=dy,dy+xy do do(EU)[cU]=wU[Rr+(cU-dy)+1];end;end;DU=dy+xy;else do if not(not(EU[Ls[0X00001]]<EU[Ls[3]]))then else AU=Ls[0X6];end;end;end;else local e_=(Ls[0x6]);(EU)[e_]=EU[e_](EU[e_+0X00001],EU[e_+2]);DU=e_;end;else if Es==1 then do if Ls[3]==85 then AU=AU-1;do(ur)[AU]={[0X6]=(Ls[6]-0XE4),[7]=0X15,[1]=(Ls[1]-0X0000e4)};end;else EU[Ls[0X6]]=nil;end;end;else EU[Ls[6]]=EU[Ls[1]]<EU[Ls[0X0003]];end;end;end;else do if not(Es<0Xf)then if not(Es>=18)then do if Es<0X10 then(EU)[Ls[6]]=not EU[Ls[0X1]];else do if Es==17 then local Ky=(Ls[6]);(EU[Ky])(L(EU,Ky+0X1,DU));DU=Ky-0X1;else do if Ls[3]==22 then AU=AU-1;ur[AU]={[0X00007]=0X00009,[1]=(Ls[1]-0x16),[0x0006]=(Ls[6]-22)};elseif Ls[3]==0X071 then AU=AU-0x1;(ur)[AU]={[0X06]=(Ls[6]-0X3C),[7]=3,[1]=(Ls[0X00001]-0X3C)};else local R_=Ls[0X06];do for V9=R_,R_+(Ls[1]-0X1)do EU[V9]=wU[Rr+(V9-R_)+0x001];end;end;end;end;end;end;end;end;else if not(Es>=19)then do EU[Ls[6]][Ls[0X5]]=Ls[0X4];end;else if Es~=20 then(EU)[Ls[0X6]]=t(EU[Ls[1]],EU[Ls[3]]);else do for T6=Ls[6],Ls[1]do(EU)[T6]=nil;end;end;end;end;end;else if Es>=12 then if Es>=13 then if Es~=0XE then do EU[Ls[0x6]]=EU[Ls[1]][Ls[4]];end;else do EU[Ls[0X6]]=EU[Ls[0X1]]/EU[Ls[0X003]];end;end;else xh[Ls[1]]=EU[Ls[0X6]];end;else if Es~=11 then EU[Ls[0x6]]=EU[Ls[0x01]]%Ls[0X4];else EU[Ls[6]]=EU[Ls[0X001]]~=EU[Ls[3]];end;end;end;end;end;else do if not(Es<31)then if not(Es<0x24)then if Es>=39 then if not(Es>=40)then do if not(EU[Ls[0X001]]<=EU[Ls[0X3]])then AU=Ls[0X00006];end;end;else if Es~=41 then if Ls[0x00003]==0X000086 then AU=AU-1;(ur)[AU]={[7]=0X001,[0X00006]=(Ls[0X6]-156),[0X01]=(Ls[0X1]-0X09c)};else EU[Ls[6]]=EU[Ls[0X1]];end;else local lc=Ls[0X06];local Lc=y(function(...)(K)();for UI in...do K(true,UI);end;end);Lc(EU[lc],EU[lc+0X01],EU[lc+0X2]);do DU=lc;end;EU[lc]=Lc;do AU=Ls[1];end;end;end;else if not(Es<37)then if Es==38 then local Gs=(Ls[0X3]-1)*0X32;local hs=(Ls[0x00006]);local js=EU[hs];do for Bd=0x1,Ls[1]do js[Gs+Bd]=EU[hs+Bd];end;end;else(EU)[Ls[0x00006]]=EU[Ls[0x0001]]%EU[Ls[0x00003]];end;else EU[Ls[6]]=EU[Ls[0x00001]]^EU[Ls[0X3]];end;end;else if Es<33 then do if Es==32 then EU[Ls[6]][EU[Ls[1]]]=EU[Ls[3]];else if not(EU[Ls[0x1]]<=Ls[0X4])then AU=Ls[6];end;end;end;else if not(Es<34)then if Es~=35 then do EU[Ls[0X0006]][EU[Ls[1]]]=Ls[0X04];end;else local oZ=(Dr[Ls[0X001]]);oZ[1][oZ[0x0002]]=EU[Ls[0x6]];end;else repeat local QU,ZU=Gr,EU;if#QU>0X0000 then local ek=({});for mL,pL in e,QU do for tk,Zk in e,pL do do if not(Zk[1]==ZU and Zk[0x2]>=0X00)then else local hL=Zk[0X2];if not(not ek[hL])then else ek[hL]={ZU[hL]};end;(Zk)[1]=ek[hL];Zk[2]=0X1;end;end;end;end;end;until true;return true,Ls[6],0;end;end;end;else if Es<26 then if not(Es<0X17)then if not(Es<24)then do if Es~=25 then repeat local W6,t6=Gr,EU;if not(#W6>0)then else local tX={};for KI,PI in e,W6 do for kC,KC in e,PI do if KC[1]==t6 and KC[2]>=0 then local sJ=KC[2];if not tX[sJ]then(tX)[sJ]={t6[sJ]};end;KC[0X1]=tX[sJ];(KC)[2]=0X01;end;end;end;end;until true;return;else do if EU[Ls[1]]~=Ls[0X4]then else AU=Ls[6];end;end;end;end;else(EU)[Ls[6]]=#EU[Ls[1]];end;else if Es==22 then local qJ=(Ls[6]);local jJ,nJ=EU[qJ]();if jJ then AU=Ls[0X0001];(EU)[qJ+0X3]=nJ;end;else if Ls[3]~=164 then repeat local MH,rH=Gr,EU;if not(#MH>0X000)then else local IJ=({});for at,ht in e,MH do do for wj,pj in e,ht do if pj[0X1]==rH and pj[2]>=0X0 then local B3=pj[2];if not(not IJ[B3])then else(IJ)[B3]={rH[B3]};end;(pj)[0X1]=IJ[B3];(pj)[2]=1;end;end;end;end;end;until true;return false,Ls[0x6],DU;else AU=AU-0X1;(ur)[AU]={[1]=(Ls[1]-244),[6]=(Ls[6]-0Xf4),[7]=24};end;end;end;else if Es<28 then if Es~=27 then(EU)[Ls[0X00006]]=EU[Ls[1]]>=EU[Ls[0X3]];else(EU)[Ls[0X00006]]=g(EU[Ls[1]],EU[Ls[3]]);end;else if not(Es>=29)then local xX=Ls[1];(EU)[Ls[0X6]]=EU[xX]..EU[xX+1];else if Es==0x1E then(EU)[Ls[6]]=EU[Ls[0X1]]*EU[Ls[3]];else(EU)[Ls[0X6]]=NU[Ls[0x00005]];end;end;end;end;end;end;end;else do if not(Es>=63)then if not(Es<52)then do if not(Es>=57)then if not(Es<54)then do if not(Es>=55)then local Sr=(jr[Ls[0X1]]);local Er,Qr=Sr[0X008],(nil);local Zr=(#Er);if Zr>0X0 then Qr={};for ZW=1,Zr do local JW=(Er[ZW]);if JW[0X1]~=0 then(Qr)[ZW-0x1]=Dr[JW[0X2]];else do Qr[ZW-1]={EU,JW[2]};end;end;end;(z)(Gr,Qr);end;EU[Ls[6]]=kh(Sr,Qr,NU);else do if Es~=56 then(EU)[Ls[0X6]]=Ls[5];else if EU[Ls[0X1]]~=Ls[4]then do AU=Ls[0X6];end;end;end;end;end;end;else do if Es==53 then local bA=(Ls[6]);local QA,IA,PA=EU[bA]();if not(QA)then else EU[bA+1]=IA;do EU[bA+0x00002]=PA;end;AU=Ls[1];end;else do EU[Ls[0x06]]=EU[Ls[0X1]]~=Ls[4];end;end;end;end;else if not(Es>=0x003C)then if Es<58 then local f1=(Ls[6]);local q1=y(function(...)K();for iC,jC,UC,uC,LC,RC,WC,eC,kC,wC in...do K(true,{iC,jC,UC,uC,LC,RC,WC,eC,kC,wC});end;end);q1(EU[f1],EU[f1+0X1],EU[f1+0X002]);DU=f1;(EU)[f1]=q1;AU=Ls[0X01];else if Es==0X03B then if not(EU[Ls[6]])then else AU=Ls[0X001];end;else EU[Ls[6]]=EU[Ls[1]]==EU[Ls[3]];end;end;else do if not(Es<61)then if Es~=62 then local gw=(Ls[6]);DU=gw+Ls[1]-0X1;EU[gw](L(EU,gw+0x1,DU));DU=gw-0X1;else local rS=Ls[0X6];local qS,aS=EU[rS]();if qS then do for XE=1,Ls[0x3]do(EU)[rS+XE]=aS[XE];end;end;AU=Ls[0X1];end;end;else local fR=Ls[0X6];local CR,jR=EU[fR]();if CR then(EU)[fR+0X01]=jR;AU=Ls[0X1];end;end;end;end;end;end;else if not(Es>=47)then do if not(Es<0x2C)then do if not(Es>=45)then local BH=Ls[0X00006];do(EU)[BH]=EU[BH](EU[BH+0X1]);end;DU=BH;else if Es==0X2e then(EU)[Ls[6]]={L({},0X1,Ls[0x001])};else EU[Ls[6]]=xh[Ls[1]];end;end;end;else if Es==43 then do(EU)[Ls[6]]={};end;else EU[Ls[0X00006]]=EU[Ls[1]]-EU[Ls[0X3]];end;end;end;else do if not(Es<49)then if Es<50 then local kg,lg=Ls[6],(Ls[1]);DU=kg+lg-0X01;repeat local Bf,Af=Gr,(EU);if#Bf>0 then local kL=({});do for uD,RD in e,Bf do for JG,fG in e,RD do if not(fG[0x1]==Af and fG[2]>=0)then else local Cj=(fG[2]);if not(not kL[Cj])then else do kL[Cj]={Af[Cj]};end;end;fG[1]=kL[Cj];(fG)[2]=0X1;end;end;end;end;end;until true;do return true,kg,lg;end;else do if Es==51 then if EU[Ls[1]]~=EU[Ls[0X3]]then else AU=Ls[6];end;else local eQ=Ls[0X0006];EU[eQ](EU[eQ+0X0001],EU[eQ+2]);DU=eQ-0x1;end;end;end;else do if Es~=0X30 then if EU[Ls[0X1]]==EU[Ls[0X03]]then else AU=Ls[0X06];end;else AU=Ls[1];end;end;end;end;end;end;else if Es<73 then if Es<68 then if Es<65 then if Es==0X0040 then if Ls[0X00003]==0X0053 then AU=AU-1;ur[AU]={[6]=(Ls[6]-0x056),[0X001]=(Ls[0X00001]-0X000056),[0X7]=0X28};else do if not(not EU[Ls[6]])then else AU=Ls[1];end;end;end;else EU[Ls[0x6]]=Ls[0x5];end;else if Es>=66 then do if Es~=67 then local Wp=(Ls[1]);local Xp=EU[Wp];for jP=Wp+0X1,Ls[0X3]do Xp=Xp..EU[jP];end;(EU)[Ls[0X0006]]=Xp;else(NU)[Ls[0X0005]]=EU[Ls[0X6]];end;end;else local Qr=(Ls[6]);do EU[Qr]=EU[Qr](L(EU,Qr+0X01,DU));end;do DU=Qr;end;end;end;else if not(Es<70)then do if not(Es>=71)then local ue,se=Ls[6],(EU[Ls[0X1]]);(EU)[ue+0X1]=se;do EU[ue]=se[Ls[4]];end;else if Es~=0X48 then local dB,FB,xB=Ls[0X006],Ls[1],(Ls[0X3]);if FB~=0 then DU=dB+FB-0X1;end;local mB,zB=nil,(nil);if FB==1 then mB,zB=uh(EU[dB]());else mB,zB=uh(EU[dB](L(EU,dB+0X1,DU)));end;do if xB~=0X1 then if xB==0 then mB=mB+dB-1;do DU=mB;end;else mB=dB+xB-2;do DU=mB+0X0001;end;end;local KR=(0X0);for iS=dB,mB do do KR=KR+1;end;do EU[iS]=zB[KR];end;end;else do DU=dB-1;end;end;end;else do EU[Ls[6]]=true;end;end;end;end;else if Es~=0X45 then if Ls[0x003]~=0X8A then do repeat local Eg,mg=Gr,EU;if not(#Eg>0x0)then else local sR=({});do for XA,hA in e,Eg do for fz,Oz in e,hA do if Oz[1]==mg and Oz[0X0002]>=0 then local YJ=Oz[0X2];if not sR[YJ]then sR[YJ]={mg[YJ]};end;do(Oz)[0X001]=sR[YJ];end;Oz[0X2]=0X1;end;end;end;end;end;until true;end;local QY=(Ls[6]);return false,QY,QY;else AU=AU-1;(ur)[AU]={[7]=21,[0x01]=(Ls[1]-8),[6]=(Ls[0X00006]-0X8)};end;else do EU[Ls[0X6]][Ls[0x5]]=EU[Ls[0X3]];end;end;end;end;else if not(Es>=0X4e)then if Es>=0X004B then do if Es>=0X4C then if Es~=77 then local l2=Dr[Ls[0X1]];(EU)[Ls[0X6]]=l2[1][l2[2]];else local FJ=Ls[6];local aJ,CJ=EU[FJ],((Ls[3]-0X001)*0X032);do for L_=1,DU-FJ do(aJ)[CJ+L_]=EU[FJ+L_];end;end;end;else local G7=Ls[6];EU[G7](EU[G7+1]);DU=G7-1;end;end;else do if Es==0X4a then do(EU)[Ls[6]]=N(EU[Ls[0X1]],EU[Ls[3]]);end;else repeat local HT,fT=Gr,EU;if not(#HT>0x000)then else local zW=({});do for OU,lU in e,HT do for fV,gV in e,lU do do if gV[0x1]==fT and gV[0X2]>=0 then local HW=gV[2];if not zW[HW]then(zW)[HW]={fT[HW]};end;do gV[0X1]=zW[HW];end;gV[2]=0x01;end;end;end;end;end;end;until true;return true,Ls[0X0006],1;end;end;end;else if not(Es<0x51)then if Es>=82 then if Es==83 then local i7=Ls[0X6];local w7,Z7=EU[i7],(EU[i7+0X001]);local U7=(EU[i7+0X2]);(EU)[i7]=y(function()for sb=w7,Z7,U7 do K(true,sb);end;end);AU=Ls[0X1];else do if not(EU[Ls[0X00001]]<EU[Ls[3]])then else do AU=Ls[6];end;end;end;end;else(EU)[Ls[0X00006]]=EU[Ls[0x1]][EU[Ls[0x3]]];end;else if not(Es<0X00004f)then if Es~=0X000050 then do DU=Ls[6];end;(EU[DU])();DU=DU-1;else(EU)[Ls[6]]=EU[Ls[0X0001]]>EU[Ls[0X3]];end;else local bm=(Ls[0X6]);local qm=(y(function(...)(K)();for rK,YK in...do(K)(true,rK,YK);end;end));qm(EU[bm],EU[bm+1],EU[bm+0X2]);DU=bm;EU[bm]=qm;AU=Ls[1];end;end;end;end;end;end;end;end;end;end);if not(iU)then if I(HU)~='\115tr\105ng'then x(HU,0X0);else do if not(T(HU,'\097\116t\101\109\112\116 \116o yi\101\108\100\032\097c\114\111ss \109et\097met\104\111d\047\067%-\099\097\108l \098\111und\097\114\121'))then else return coroutine.yield();end;end;if not(T(HU,"^.-:%d+: "))then(x)(HU,0x0);else(x)("Lu\114\097ph Scr\105p\116\058"..(Mr[AU-1]or'\040i\110ternal)')..":\032"..h(HU),0X0000);end;end;else if HU then if nU==1 then return EU[RU]();else return EU[RU](L(EU,RU+1,DU));end;elseif RU then do return L(EU,RU,nU);end;end;end;end;if not(C)then else(C)(Cr,sr);end;return Cr;end;wh=0x6;end;end;else do if wh<=0 then Ih=nil;wh=0X7;else do if wh==0X00001 then xh={};do wh=3;end;else(xh)[0X3]=Ih;wh=0;end;end;end;end;end;end;do return kh(fh,Bh,M)(...);end;end)(string.sub,10,8,16777216,17,0X7,true,0X034,0Xb,2,0X00,bit,bit32,table.unpack,0X0003F46,14,next,0X003,type,string.rep,'bxor',string.char,0XD,9,string.byte,assert,12,1,setfenv,0x06,setmetatable,string.gsub,"\035",select,7997,0X05,nil,...);end;
