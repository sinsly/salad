	local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/Kronos"))()

--attribute stuff

				game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Stamina.Border.Name = "one"
				game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Stamina.Background.Name = "two"
				game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Stamina.BackgroundShadow.Name = "three"
				game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Stamina.Shadow.Name = "four"
				game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Stamina.MaxBar.Name = "five"
				game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Stamina.Circling.Name = "six"
				game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Stamina.MaxCircling.Name = "seven"
				game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Stamina.Bar.Name = "eight"

function getAcceleration()
    if workspace[game.Players.LocalPlayer.Name]:FindFirstChild("HitBox") ~= nil then
        local Local = game.Players.LocalPlayer
        local Character = Local.Character
        local Humanoid = Character.Humanoid
        return Humanoid:GetAttribute("Acceleration")
    end
end

function getSpeed()
    if workspace[game.Players.LocalPlayer.Name]:FindFirstChild("HitBox") ~= nil then
        local Local = game.Players.LocalPlayer
        local Character = Local.Character
        local Humanoid = Character.Humanoid
        return Humanoid:GetAttribute("CurrentSpeed")
    end
end

function allowRotation()
    spawn(function()
        while getgenv().player_rotation do
            if workspace[game.Players.LocalPlayer.Name]:FindFirstChild("HitBox") ~= nil then
                local Local = game.Players.LocalPlayer
                local Character = Local.Character
                local Humanoid = Character.Humanoid
                Character:SetAttribute("MovingForward", true);
                wait(0.01)
            end
        end
    end)
end

--aimbot stuff
local aimbot_value = 55.5
local aimbot_optimization = 0.0001
local aimbot_randomization = 0

function randomizer(value)
    return math.random(-value + 0.0001, value - 0.0001)
end

function aimbot() 
    spawn(function()
        while getgenv().aimbot_enabled do
            if workspace[game.Players.LocalPlayer.Name]:FindFirstChild("ShotMeterTiming") ~= nil then
                for _,v in pairs (workspace[game.Players.LocalPlayer.Name]:GetChildren()) do
                    if v.Name == "ShotMeterTiming" then
                        if v.Value > (aimbot_value + randomizer(aimbot_randomization))/100 then
                            local args = {
                                [1] = "Shoot",
                                [2] = false
                            }
                            game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(unpack(args))
                        break
                        end
                    end
                end
            end
            wait(aimbot_optimization)
        end
    end)
end

--autoblock stuff
local autoblock_proximity = 32
local autoblock_key = Enum.KeyCode.G
local UserInputService = game:GetService("UserInputService")
local autoblock_delay = 0.1
local autoblock_disable = 23

function autoblock() 
    spawn(function()
        while getgenv().autoblock_enabled do -- while toggle is enabled do
            if UserInputService:IsKeyDown(autoblock_key) then -- is key being held?
                for i,v in pairs(game.Players:GetChildren()) do --get all players
                    -- if workspace[v.Name].MyCourt.Value == workspace[game.Players.LocalPlayer.Name].MyHoop.Value then --this is a prediction update for park
                    if workspace:FindFirstChild(v.Name) ~= nil then
                        if workspace[v.Name]:FindFirstChild("ShotMeterTiming") ~= nil then --if a player has shot meter timing (he's shooting)
                            if workspace[v.Name].MyHoop.Value ~= workspace[game.Players.LocalPlayer.Name].MyHoop.Value then --shooting hoop value check, make sure player's not shooting same hoop
                                local myHoop = workspace[v.Name].MyHoop.Value
                                local hoopPos = {}
                                for _,t in pairs(workspace:GetChildren()) do
                                    if t.Name == tostring(myHoop) then
                                        hoopPos.x = t.Rim.Position.X
                                        hoopPos.z = t.Rim.Position.Z
                                    end
                                end
                                print(hoopPos.x, hoopPos.z)
                                print(v:DistanceFromCharacter(Vector3.new(hoopPos.x, workspace[v.Name].Head.Position.Y, hoopPos.z)))
                                if v:DistanceFromCharacter(Vector3.new(hoopPos.x, workspace[v.Name].Head.Position.Y, hoopPos.z)) < autoblock_disable then
                                    print("successful")
                                    if v:DistanceFromCharacter(workspace[game.Players.LocalPlayer.Name].Head.Position) < autoblock_proximity then --if distance is lesser than proximity
                                        local Ball = game:GetService("Workspace").Basketball
                                        local Human = workspace[game.Players.LocalPlayer.Name].Humanoid
                                        Human:MoveTo(Vector3.new(Ball.Position.X, Ball.Position.Y, Ball.Position.Z))
                                        wait(autoblock_delay)
                                        keypress(0x20) --press space
                                        wait(0.1)
                                        keyrelease(0x20)  --    release space
                                    end
                                end
                            end
                        end
                    end
                end   
            end
            wait(0.001)
        end
    end)
end

local window = library:Window({
    Title = "RB World 4",
    Accent = Color3.fromRGB(161,46,46),
    Logo = 10026917810,
    ToggleKey = Enum.KeyCode.RightControl
 })
 
 local playr = window:NewTab({
    Logo = 7992557358
 })
 
 local ps = playr:TabSection({
     Title = "Player"
 })
  
 local cc = ps:AddColumn({
     Title = "Character"
 })
 
 local ccs = cc:Section({
     Title = "Enhancer"
 })

ccs:Toggle({
    Text = "Inf Stanima",
    State = false,
    Callback = function(state) 
    	print(state)
	if game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Name == nil then
            return
		else
	if workspace:FindFirstChild(game.Players.LocalPlayer.Name) == nil then
            return
        else 
		local sweat = workspace[game.Players.LocalPlayer.Name].Head.Sweat
		if state then
			sweat.Rate = 0
				game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Stamina.Border.Name = "one"
				game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Stamina.Background.Name = "two"
				game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Stamina.BackgroundShadow.Name = "three"
				game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Stamina.Shadow.Name = "four"
				game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Stamina.MaxBar.Name = "five"
				game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Stamina.Circling.Name = "six"
				game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Stamina.MaxCircling.Name = "seven"
				game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Stamina.Bar.Name = "eight"
			return
		else
			sweat.Rate = 17
			if game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Stamina.one.Name == nil then
            return
            else 
				game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Stamina.one.Name = "Border"
				game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Stamina.two.Name = "Background"
				game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Stamina.three.Name = "BackgroundShadow"
				game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Stamina.four.Name = "Shadow"
				game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Stamina.five.Name = "MaxBar"
				game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Stamina.six.Name = "Circling"
				game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Stamina.seven.Name = "MaxCircling"
				game:GetService("Players").LocalPlayer.PlayerGui.MyPadUI.Stamina.eight.Name = "Bar"
			return
end
end
end
end
end
 })

ccs:Toggle({
    Text = "Show Contest",
    State = false,
    Callback = function(state) 
        print(state)
        if workspace:FindFirstChild(game.Players.LocalPlayer.Name) == nil then
            return
        else
            local contest = workspace[game.Players.LocalPlayer.Name].Pad
            if state then
                contest.Transparency = 0
                contest.Material = 'Neon'
                contest.BrickColor = BrickColor.new('Deep blue')
                return
            else
                contest.Transparency = 1
                return
            end
        end
     end
 })

 ccs:Toggle({
    Text = "Reach/Small HBE",
    State = false,
    Callback = function(state) 
        if workspace:FindFirstChild(game.Players.LocalPlayer.Name) == nil then
            return
        else
            local hitbox = workspace[game.Players.LocalPlayer.Name].HitBox
            if state then
                hitbox.Size = Vector3.new(6, 6, 6)
                return
            else
                hitbox.Size = Vector3.new(4, 4, 2.5)
                return
            end
        end
     end
 })
 
ccs:Toggle({
    Text = "Allow More Player Movement",
    State = false,
    Callback = function(state) 
        getgenv().player_rotation = true
        if state then
            allowRotation()
        end
     end
})

local ccss = cc:Section({
    Title = "Badge Level Editor"
})

ccss:Dropdown({
    Text = "Badge Level",
    List = {'Diamond', 'Gold', 'Silver', 'Bronze'},
    Callback = function(Chosen) 
        if (Chosen) == "Diamond" then
         getgenv().badgelevel = 4 -- [1 = Bronze] [2 = Silver] [3 = Gold] [4 = Diamond]
 
 Players = game:GetService("Players")
 player = Players.LocalPlayer
 boosts = player.Character.Boosts
 items = boosts:GetChildren()
 
 for i = 1, #items - 0 do
     items[i].Value = badgelevel
 end
 end
     if (Chosen) == "Gold" then
         getgenv().badgelevel = 3 -- [1 = Bronze] [2 = Silver] [3 = Gold] [4 = Diamond]
 
 Players = game:GetService("Players")
 player = Players.LocalPlayer
 boosts = player.Character.Boosts
 items = boosts:GetChildren()
 
 for i = 1, #items - 0 do
     items[i].Value = badgelevel
 end
 end
     if (Chosen) == "Silver" then
         getgenv().badgelevel = 2 -- [1 = Bronze] [2 = Silver] [3 = Gold] [4 = Diamond]
 
 Players = game:GetService("Players")
 player = Players.LocalPlayer
 boosts = player.Character.Boosts
 items = boosts:GetChildren()
 
 for i = 1, #items - 0 do
     items[i].Value = badgelevel
 end
 end
     if (Chosen) == "Bronze" then
         getgenv().badgelevel = 1 -- [1 = Bronze] [2 = Silver] [3 = Gold] [4 = Diamond]
 
 Players = game:GetService("Players")
 player = Players.LocalPlayer
 boosts = player.Character.Boosts
 items = boosts:GetChildren()
 
 for i = 1, #items - 0 do
     items[i].Value = badgelevel
 end
 end
        end
 })


local tab = window:NewTab({
   Logo = 10026319018
})

local ss = tab:TabSection({
   Title = "Shooting"
})

local ac = ss:AddColumn({
   Title = "Aimbot"
})

local acs = ac:Section({
    Title = "Aimbot Configuration"
})

acs:Toggle({
   Text = "Toggle Aimbot",
   State = false,
   Callback = function(state) 
        getgenv().aimbot_enabled = state
        if state then
            aimbot()
        end
    end
})

acs:Slider({
    Text = "Release Value",
    Min = 0,
    Max = 100,
    Def = 59,
    Callback = function(value)
        aimbot_value = value
    end
})

acs:Slider({
    Text = "Aimbot Optimization",
    Min = 0,
    Max = 3,
    Def = 0,
    Callback = function(value)
        if value == 0 then
            aimbot_optimization = 0.00001
        elseif value == 1 then
            aimbot_optimization = 0.0001
        elseif value == 2 then
            aimbot_optimization = 0.001
        else
            aimbot_optimization = 0.01
        end
    end
})

acs:Slider({
    Text = "Aimbot Randomization",
    Min = 0,
    Max = 10,
    Def = 0,
    Callback = function(value)
        aimbot_randomization = value
    end
})

local guard = window:NewTab({
   Logo = 10029370581
})

local gd = guard:TabSection({
    Title = "Guarding"
})
 
local grd = gd:AddColumn({
    Title = "Auto Block"
})
 
local gurd = grd:Section({
    Title = "Block Configuration"
})

gurd:Toggle({
    Text = "Toggle Auto Block",
    State = false,
    Callback = function(state) 
         getgenv().autoblock_enabled = state
         if state then
             autoblock()
         end
     end
 })

gurd:Keybind({
   Text = "Keybind",
   Key = Enum.KeyCode.G,
   Callback = function(key) 
        print(key)
        autoblock_key = key
    end
})

gurd:Slider({
    Text = "Block Delay",
    Min = 0,
    Max = 15,
    Def = 1,
    Callback = function(value)
        autoblock_delay = value/10
    end
})

gurd:Slider({
    Text = "Disable Auto Guard Hoop Distance",
    Min = 0,
    Max = 100,
    Def = 23,
    Callback = function(value)
        autoblock_disable = value
    end
})

gurd:Slider({
    Text = "Proximity",
    Min = 0,
    Max = 100,
    Def = 32,
    Callback = function(value)
        autoblock_proximity = value
    end
})

local dribbl = window:NewTab({
   Logo = 10029252679
})

 local dribs = dribbl:TabSection({
    Title = "Dribbling"
})

local drb = dribs:AddColumn({
    Title = "Keybinds"
})

local dbrr = drb:Section({
    Title = "Dribble Keybinds"
})

dbrr:Keybind({
   Text = "Spin Right",
   Key = Enum.KeyCode.C,
   Callback = function(SpinR) 
local args = {
    [1] = "Dribble Move",
    [2] = "ZXC"
}

game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(unpack(args))
    end
})

dbrr:Keybind({
   Text = "Spin Left",
   Key = Enum.KeyCode.Z,
   Callback = function(SpinL) 
local args = {
    [1] = "Dribble Move",
    [2] = "CXZ"
}

game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(unpack(args))
    end
})

dbrr:Keybind({
   Text = "Double BB Left",
   Key = Enum.KeyCode.Q,
   Callback = function(DBBL) 
local args = {
    [1] = "Dribble Move",
    [2] = "ZXX"
}

game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(unpack(args))
    end
})

dbrr:Keybind({
   Text = "Double BB Right",
   Key = Enum.KeyCode.F,
   Callback = function(DBBR) 
local args = {
    [1] = "Dribble Move",
    [2] = "CXX"
}

game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(unpack(args))
    end
})

dbrr:Keybind({
   Text = "Double Stepback",
   Key = Enum.KeyCode.X,
   Callback = function(DSB) 
local args = {
    [1] = "Dribble Move",
    [2] = "XX"
}

game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(unpack(args))
    end
})

local miscy = window:NewTab({
   Logo = 10043545333
})

 local ms = miscy:TabSection({
    Title = "Miscellaneous"
})


local custo = window:NewTab({
   Logo = 10028012040
})

local cst = custo:TabSection({
    Title = "Settings"
})
 
local cstr = cst:AddColumn({
    Title = "Customize"
})

local cstrm = cstr:Section({
    Title = "UI Keybind"
})

cstrm:Keybind({
   Text = "Keybind",
   Key = Enum.KeyCode.H,
   Callback = function(form) 
    end
})

local mc = ms:AddColumn({
    Title = "Misc"
})

local aps = mc:Section({
    Title = "Auto Pick Character"
})

local ap_pos = 'PG'

function autopick() 
    while getgenv().autopick_enabled do
        local args = {
            [1] = "Choose",
            [2] = ap_pos
        }
        game:GetService("ReplicatedStorage").Remotes.ChoosePlayer:InvokeServer(unpack(args))
        wait(0.0001)
    end
end


aps:Dropdown({
    Text = "Position",
    List = {'PG', 'SG', 'SF', 'PF', 'C'},
    Callback = function(value) 
        ap_pos = value
    end
 })

 aps:Toggle({
    Text = "Toggle Auto Pick",
    State = false,
    Callback = function(state) 
         getgenv().autopick_enabled = state
         if state then
             autopick()
         end
     end
 })

 local pcs = mc:Section({
    Title = "Player Clothing"
})
 
 pcs:Toggle({
    Text = "Unlock Clothes",
    State = false,
    Callback = function(unlock) 
        
        if unlock == true then
         loadstring(game:HttpGet("https://pastebin.com/raw/L4u7zC6a"))()
         end
     if unlock == false then
            loadstring(game:HttpGet("https://pastebin.com/raw/YgCs4zYT"))()
         end
     end
 })
