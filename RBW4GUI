-- This file was generated using Luraph Obfuscator v13.5.4

return(function(ec,Gc,Uc,Lc,Sc,Qc,Oc,wc,uc,Pc,ic,sc,rc,Fc,mc,tc,Xc,Ec,Ic,Hc,kc,lc,Rc,Dc,gc,Kc,Nc,hc,fc,Bc,vc,nc,Wc,Yc,jc,Tc,oc,bc,...)local C,V=select,pcall;local Zc,z,p,d,e,j,O,l,c=0X3,nil,nil,nil,nil,nil,nil,nil,(nil);do while Zc<=0X00007 do do if Zc<=0X3 then do if not(Zc<=1)then if Zc~=0x02 then z=gc;Zc=0x2;else p=rc;do Zc=4;end;end;else if Zc==0 then O=0X00100000000;Zc=7;else do c=Xc.char;end;do Zc=8;end;end;end;end;else do if Zc<=0X00005 then if Zc~=4 then j={[0]=1};Zc=0X0000;else do d=Xc.sub;end;do Zc=6;end;end;else do if Zc~=6 then l=Rc;do Zc=0X1;end;else e=1;Zc=0X5;end;end;end;end;end;end;end;end;local r,R,a=nil,nil,(nil);for S_=0,0X2 do if not(S_<=0X0)then do if S_~=1 then a=lc;else R=ic;end;end;else r=tc;end;end;local i=(rawget);Zc=1;local W,g,t,L=nil,nil,nil,(nil);while Zc<=0X3 do if Zc<=0x1 then if Zc~=0 then W={[0]={[0]=0x0,1,2,0X3,4,5,0X06,Uc,8,9,10,11,0X0c,13,0XE,15},{[0X0]=1,Lc,0x3,0X2,0X5,0X4,7,0X006,9,8,11,wc,13,Bc,15,0XE},{[0]=2,3,0X0000,1,6,7,0X4,5,0x000A,0XB,8,0X9,14,0X0F,0X00C,0X00D},{[0X0]=0x00003,2,1,0X0,Uc,0X6,0x5,0X4,0XB,10,9,0X08,0XF,14,13,12},{[0]=4,5,0X006,7,0X0,1,0x2,3,0xC,13,0X00e,15,8,9,10,Ic},{[0X0000]=0X5,0X4,7,6,0X1,0,3,0X2,0xd,12,15,14,hc,0x0008,0X0000B,10},{[0]=0X6,0X07,0X4,0x5,2,3,Lc,Sc,0Xe,0X00F,0X000C,0xD,wc,11,0X0008,9},{[0X0]=0X0007,6,0X5,0X04,0x003,2,1,0,15,0XE,13,12,11,10,0X9,8},{[0]=8,9,10,0xb,12,13,14,ec,0X00000,1,2,0X3,4,5,0X6,7},{[0]=0x0009,0X8,0Xb,wc,0X000d,12,0X0F,14,Sc,0,oc,2,5,0X4,0x7,0x6},{[0X0]=wc,11,8,9,0xe,0XF,12,13,2,0X03,0X00000,1,6,0X07,Ec,5},{[0]=0x000B,10,0X9,8,15,0xe,13,12,0X3,2,0X1,0X0,0X7,6,5,0X4},{[0x0]=12,13,14,0xf,8,9,0Xa,0XB,0X0004,Gc,6,Uc,0,0X00001,2,0X00003},{[0]=13,12,0X00f,0xe,0X9,uc,Ic,0Xa,5,0X4,0x7,0X6,1,0,0X003,mc},{[0]=0Xe,15,0XC,13,10,11,8,9,0X6,7,Ec,0X0005,0X2,oc,0,1},{[0]=0Xf,14,0x00d,Bc,11,10,9,8,0X7,0x6,Gc,0X0004,0X3,0X02,0X00001,0X0}};Zc=0;else g=Oc;do Zc=0X003;end;end;else if Zc~=0X002 then do t=bc;end;Zc=2;else L=Fc;Zc=0X004;end;end;end;local B=(unpack or table.unpack);Zc=0X1;local h,q=nil,(nil);repeat if not(Zc<=0)then if Zc~=1 then q=nc;break;else Zc=0;end;else h=vc;do Zc=0X0002;end;end;until false;local S=((h and h()or _ENV));local o,E=nil,(nil);for M5=0,0X3 do if not(M5<=0x1)then if M5~=0x00002 then o=r(d(o,5),'\046\046',function(lW)if a(lW,0X00002)~=72 then local PJ,MJ=0X01,nil;repeat if PJ~=0 then MJ=c(z(lW,16));PJ=0;else if E then local Ek=g(MJ,E);E=kc;do return Ek;end;else return MJ;end;break;end;until(false);else for wx=0X0,1 do do if wx~=0X0 then return jc;else do E=z(d(lW,0X1,0X1));end;end;end;end;end;end);else end;elseif M5~=0X0 then oelse end;end;local F=(O-0x001);local pc=Sc;local G=(function()local Wn,An=1,nil;while Wn<2 do if Wn~=0 then An=a(o,e,e);Wn=0X0;else e=e+0X001;do Wn=0X2;end;end;end;do return An;end;end);local m,qc,b,v=nil,nil,nil,(nil);for yc=0,4 do do if yc<=0X1 then if yc~=0X000 then qc={};else m=0X80000000;end;else do if yc<=0X2 then b=0x2^52;else if yc~=3 then do local PG=nil;local wG=1;while wG~=0X2 do if wG==0 then do for r2=0x1,0X01F do local g2=0;do while g2~=2 do if g2~=0X0 then do PG=PG*0x2;end;do g2=0X2;end;else(j)[r2]=PG;g2=0X1;end;end;end;end;end;do wG=2;end;else PG=0X0002;wG=0X0;end;end;end;else v=m-1;end;end;end;end;end;end;local J=(error);Zc=1;local u,k,s=nil,nil,(nil);while Zc~=0X0003 do if Zc<=0x0 then s=function()local ai,Si,Ti=0X00,nil,nil;repeat if ai<=0X0 then Si,Ti=u(),u();ai=1;else if ai==0X1 then if not(Ti>=m)then else do Ti=Ti-O;end;end;ai=2;else return Ti*O+Si;end;end;until(false);end;Zc=0X3;else if Zc==1 then u=function()local fj,Dj,jj,yj=a(o,e,e+0X3);do e=e+4;end;do return yj*16777216+jj*0X10000+Dj*sc+fj;end;end;Zc=2;else k=function(rC,bC,SC)local sC=(nil);do for Lw=0,0X02 do do if Lw<=0 then do sC=(rC/j[bC])%j[SC];end;else if Lw==1 then do sC=sC-sC%0x1;end;else do return sC;end;end;end;end;end;end;end;Zc=0x0;end;end;end;Zc=0x00002;local H,N,X=nil,nil,(nil);do repeat if not(Zc<=0)then if Zc==0X1 then X=string.match;break;else H=function()local yH,VH=nil,nil;local pH=(0);do while pH~=2 do do if pH~=0X0 then do VH=u();end;pH=2;else yH=u();pH=1;end;end;end;end;do if yH==0 and VH==0X0 then return 0;end;end;local RH=(-1)^k(VH,0X001F,0X1);local aH=1;local ZH=k(VH,0X0014,11);local eH=(k(VH,Lc,20)*O+yH);pH=0;do repeat if pH~=0X000 then do return RH*(2^(ZH-0x03FF))*(eH/b+aH);end;else if ZH==0 then if eH==0X0 then return RH*0;else local PI=(0X1);do repeat if PI~=0X00 then ZH=1;do PI=0X00;end;else do aH=0x0;end;break;end;until(false);end;end;elseif ZH~=0X0007Ff then else if eH~=0 then do return RH*(0X1/0X00000);end;else do return RH*(0/0X0);end;end;end;do pH=0X1;end;end;until false;end;end;Zc=0;end;else do N=(Hc or Wc);end;do Zc=0X001;end;end;until false;end;local I,D=setfenv,(N and N.bxor or function(Oh,Xh)for r4=0,1 do if r4==0 then Oh=Oh%O;else do Xh=Xh%O;end;end;end;local sh=(0);local yh=(0X0);local qh=Sc;repeat if yh==0 then while Oh>0X0 and Xh>0X0000 do local v8,x8,e8=0X00,nil,(nil);while v8<0X3 do if not(v8<=0)then if v8~=1 then e8=Xh%0x010;v8=0X1;else sh=sh+W[x8][e8]*qh;v8=0X3;end;else x8=Oh%16;v8=2;end;end;v8=0X1;repeat if v8~=0 then Oh=(Oh-x8)/16;v8=0;else do Xh=(Xh-e8)/Nc;end;v8=2;end;until v8==0X2;do qh=qh*16;end;end;yh=1;else return sh+Oh*qh+Xh*qh;end;until(false);end);local U=next;local P=N and N.band or function(DJ,fJ)for k_=0x0,2 do if k_<=0X0 then DJ=DJ%O;else do if k_~=1 then do return((DJ+fJ)-D(DJ,fJ))/0X2;end;else fJ=fJ%O;end;end;end;end;end;local f=N and N.bor or function(H1,P1)for r9=0X0,0X002 do if r9<=0X000 then H1=H1%O;else if r9~=0X1 then return F-P(F-H1,F-P1);else P1=P1%O;end;end;end;end;local T,Q,Y=N and N[Dc]or function(KU)do return F-(KU%O);end;end,N and N[Pc],N and N.rshift;Q=Q or function(eA,SA)local NA=0X0001;do repeat do if not(NA<=0X000)then if NA~=1 then return(eA*j[SA])%O;else do if SA>=32 then return 0;end;end;NA=0X0;end;else if not(SA<0)then else do return Y(eA,-SA);end;end;do NA=0X2;end;end;end;until(false);end;end;Zc=2;local Z,y,x=nil,nil,(nil);while Zc<=0X3 do if Zc<=1 then if Zc~=0X0 then x=G();do Zc=0x4;end;else y=function()local u5,N5=0X00,(0);while true do local Oo=(a(o,e,e));e=e+1;N5=f(N5,Q(P(Oo,127),u5));if P(Oo,0X80)~=0x0 then else do return N5;end;end;u5=u5+0X07;end;end;do Zc=1;end;end;else if Zc==0x2 then Y=Y or function(hh,yh)local Qh=nil;do for kV=0,3 do do if kV<=1 then if kV~=0 then if yh<0 then return Q(hh,-yh);end;else do if yh>=0X20 then do return 0;end;end;end;end;else if kV~=2 then return Qh-Qh%1;else do Qh=(hh%O/j[yh]);end;end;end;end;end;end;end;Zc=3;else do Z={[0X2]=7,[0]=3,[9]=0X6,[1]=0X0,[0X0003]=4,[0X9]=Lc,[0X7]=5,[0X00005]=0X06};end;do Zc=0;end;end;end;end;local Ac=(G());local Cc=function(Uk)local zk,dk,yk,ok,Rk,tk=0X3,nil,nil,nil,nil,(nil);do while zk<0X5 do if zk<=1 then if zk~=0 then yk=D(dk[0X0001],Ac);do zk=0x4;end;else do tk=D(dk[4],Ac);end;zk=0x5;end;else do if not(zk<=2)then do if zk==3 then dk={a(o,e,e+0X3)};zk=0X1;else do ok=D(dk[2],Ac);end;zk=0X2;end;end;else Rk=D(dk[3],Ac);do zk=0;end;end;end;end;end;end;do for T_=0x00,0X2 do if T_<=0 then Ac=(fc*Ac+Uk)%256;elseif T_==1 then do e=e+0x4;end;else do return tk*0X01000000+Rk*0X10000+ok*256+yk;end;end;end;end;end;local K,Vc,zc,M={2,0X005,0X003},nil,nil,(nil);for EW=0X0000,2 do do if not(EW<=0)then if EW~=0x0001 then M=function()local yx=(nil);for Tf=0X0,2 do if not(Tf<=0)then if Tf~=1 then return yx;elseif not(yx>v)then else return yx-O;end;else yx=y();end;end;end;else zc=function(Bb)local Ib,Fb,zb=0X0,nil,(nil);while Ib<2 do if Ib~=0X00000 then zb="";Ib=2;else do Fb=u();end;do Ib=0X00001;end;end;end;do for VT=1,Fb,7997 do local GT=1;local NT,rT=nil,nil;while 0.5748468476005762 do if not(GT<=0X00001)then if not(GT<=0X2)then do if GT~=3 then do zb=zb..c(B(rT));end;break;else if NT>Fb then do NT=Fb;end;end;GT=0X00000;end;end;else for kh=1,#rT do local Ph=0;repeat if Ph~=0X0 then x=(Bb*x+0X0b3)%256;break;else(rT)[kh]=D(rT[kh],x);Ph=0X1;end;until(false);end;do GT=0X004;end;end;else if GT==0 then do rT={a(o,e+VT-1,e+NT-0X1)};end;GT=0X2;else NT=VT+7997-0X01;GT=3;end;end;end;end;end;e=e+Fb;do return zb;end;end;end;else do Vc=function(...)return C("#",...),{...};end;end;end;end;end;Zc=0;local w,Jc=nil,nil;while Zc~=0X2 do if Zc~=0 then Jc={};do Zc=0X00002;end;else w=coroutine.yield;Zc=0X00001;end;end;Zc=0X1;local dc,ac=nil,(nil);do repeat if Zc==0 then function ac()local eX,IX,oX,MX=nil,nil,nil,nil;for o5=0,4 do if not(o5<=0X1)then if o5<=2 then IX={kc,{},nil,kc,nil,{},kc,{},nil};else do if o5~=0x3 then MX={};else oX=0x1;end;end;end;elseif o5==0 then else eX={};end;end;IX[Sc]=MX;for JF=1,y()do do(MX)[JF]={G(),y()};end;end;local kX=(nil);local hX=(3);while hX<=0x00003 do if hX<=1 then if hX~=0 then(IX)[0x3]=y();do hX=0X0;end;else do kX=G();end;hX=4;end;else if hX==2 then IX[0X0012]=u();hX=0X00001;else do IX[15]=u();end;hX=2;end;end;end;do for vZ=0,0X1 do if vZ~=0 then(IX)[Ec]=k(kX,2,0X001)~=0X0;else do(IX)[5]=k(kX,1,1)~=0;end;end;end;end;local cX=(IX[8]);local TX=(u()-0x10ce3);for yv=1,TX do do(cX)[yv]={[4]=G(),[2]=M(),[0X005]=M(),[0X01]=y(),[Tc]=G(),[0X003]=M(),[7]=G()};end;end;hX=1;while hX<0X2 do do if hX~=0X00000 then(IX)[0X000013]=G();do hX=0;end;else(IX)[7]=y();hX=0X2;end;end;end;local bX=(IX[mc]);hX=0;local pX,qX,JX=nil,nil,(nil);while hX~=0X4 do if not(hX<=1)then if hX==0x2 then qX={};hX=0X1;else JX=u();hX=0X4;end;elseif hX==0x0 then do pX=u()-0X10748;end;do hX=2;end;else for E9=0,pX-0x00001 do(bX)[E9]=ac();end;hX=3;end;end;do hX=0X01;end;repeat do if hX~=0X000 then for Gs=1,JX do local Ds=u();local Ns=u();local Ss=(0X0);local Hs=nil;while Ss<=0X0001 do if Ss~=0 then for PP=Ds,Ns do(IX[0X6])[PP]=Hs;end;Ss=0X2;else do Hs=u();end;do Ss=0x00001;end;end;end;end;hX=0X0;else do(IX)[0X0000E]=G();end;hX=0X2;end;end;until hX>0X1;local xX,jX=nil,(nil);for Er=0,1 do if Er==0 then xX=u()-89103;else do jX=G();end;end;end;local iX=(G()~=0X0);for le=0,3 do if not(le<=1)then if le~=2 then do return IX;end;else do for Jp=0x1,TX do local Np,bp=0X00,nil;repeat if Np~=0X0000 then for fD,UD in ipairs(K)do local ND=Z[UD];local DD=nil;local qD=0;while qD<=0X01 do if qD~=0 then if DD==0Xc then local OL,TL,UL=0,nil,nil;do while OL<2 do if OL~=0x0 then UL=qX[TL];OL=2;else TL=eX[bp[UD]];OL=0x001;end;end;end;do if UL then(bp)[ND]=UL[1];local mL=(UL[2]);mL[#mL+1]={bp,ND};end;end;elseif DD==11 then(bp)[UD]=Jp+bp[UD]+0X1;end;qD=0x2;else DD=bp[ND];qD=0X1;end;end;end;do Np=0x2;end;else bp=IX[8][Jp];do Np=1;end;end;until Np==0x2;end;end;end;elseif le~=0X000 then IX[9]=y();else for wp=1,xX do local mp=(2);local Tp,Fp,Wp=nil,nil,(nil);while mp~=0X08 do if mp<=0X3 then if mp<=1 then do if mp==0X0000 then if iX then(qc)[pc]=Wp;pc=pc+1;end;mp=0X8;else eX[wp-1]=oX;mp=4;end;end;else if mp==2 then Tp=G();mp=0X3;else Fp=kc;mp=1;end;end;else if not(mp<=0X005)then if mp==0X6 then Wp={Fp,{}};mp=7;else qX[oX]=Wp;do mp=0x5;end;end;else do if mp==4 then if Tp==0x0c6 then Fp=d(zc(jX),0X13);elseif Tp==172 then do Fp=s();end;elseif Tp==Qc then Fp=u();elseif Tp==155 then Fp=H();elseif Tp==Yc then Fp=u();elseif Tp==0X0005b then do Fp=false;end;elseif Tp==224 then Fp=s();elseif Tp==89 then Fp=H()+u();elseif Tp==0X45 then Fp=d(zc(jX),0x3);elseif Tp==0X1A then Fp=s();elseif Tp==254 then Fp=H();elseif Tp==0Xec then Fp=true;elseif Tp~=0X00000 then else do Fp=H();end;end;mp=0X6;else oX=oX+0X1;do mp=0X000;end;end;end;end;end;end;end;end;end;end;Zc=0x0002;else function dc(UU,bU,CU)local KU=bU[7];local uU=bU[0X6];local JU,iU,NU=bU[5],bU[4],bU[9];local yU,hU,lU=bU[8],bU[2],(bU[0x3]);local vU=t({},{__mode="v"});local MU=(nil);MU=function(...)local Qt,Dt=1,(0);local lt=(h and h()or _ENV);local ut,zt=Vc(...);local Rt={};ut=ut-0X1;for Mw=0x0,ut do do if not(lU>Mw)then do break;end;else Rt[Mw]=zt[Mw+0X1];end;end;end;Jc[2]=bU;local Nt=(lt==S and UU or lt);do Jc[3]=Rt;end;do if not JU then zt=nil;else if iU then Rt[lU]={n=ut>=lU and ut-lU+1 or 0X0,B(zt,lU+0X1,ut+0X01)};end;end;end;do if Nt~=lt then if not(I)then _ENV=Nt;else(I)(MU,Nt);end;end;end;local Pt,wt,ft,qt=V(function()while"*\075\071^Le"do local Sa=yU[Qt];local ca=(Sa[0X00001]);Qt=Qt+0x1;if ca<45 then do if not(ca>=0x00016)then if not(ca<0Xb)then do if ca<16 then if ca>=0XD then do if not(ca<0X0E)then if ca==0Xf then if not(Rt[Sa[3]])then else Qt=Sa[0x2];end;else Rt[Sa[0X3]]=D(Rt[Sa[0X2]],Rt[Sa[5]]);end;else local Fu=(Sa[3]);(Rt[Fu])(Rt[Fu+0X1],Rt[Fu+0x00002]);Dt=Fu-0X1;end;end;else if ca==12 then if Rt[Sa[0X2]]~=Rt[Sa[5]]then else Qt=Sa[3];end;else do Rt[Sa[0X3]]=Nt[Sa[7]];end;end;end;else if not(ca<0x13)then if not(ca>=0x14)then local c9,v9=Sa[0X0003],Rt[Sa[0x2]];(Rt)[c9+1]=v9;(Rt)[c9]=v9[Sa[0X6]];else do if ca~=0X0015 then Rt[Sa[0X3]]=Rt[Sa[0X002]]>Rt[Sa[0X005]];else if Rt[Sa[0X0002]]==Sa[6]then Qt=Sa[3];end;end;end;end;else if ca<17 then do Rt[Sa[0X3]]=nil;end;else if ca~=0X12 then if Sa[0X5]==0X15 then Qt=Qt-1;(yU)[Qt]={[1]=0X000037,[0X003]=(Sa[3]-0XEc),[2]=(Sa[0X2]-0X0000EC)};elseif Sa[0X5]~=137 then Rt[Sa[3]]=not Rt[Sa[2]];else Qt=Qt-1;do yU[Qt]={[0X2]=(Sa[2]-55),[0x3]=(Sa[0X3]-55),[0X1]=66};end;end;else local Xh=Sa[0X03];local ah,Uh=Rt[Xh]();if ah then Rt[Xh+1]=Uh;Qt=Sa[0X2];end;end;end;end;end;end;else if not(ca<0X5)then if not(ca>=0X8)then do if ca<6 then Rt[Sa[3]]=Rt[Sa[2]]%Sa[0X6];else if ca==7 then do Rt[Sa[0X3]]=Rt[Sa[2]][Rt[Sa[0X5]]];end;else Jc[Sa[0X2]]=Rt[Sa[0X3]];end;end;end;else if ca<0X009 then if Sa[0X5]==0X8E then Qt=Qt-0X1;(yU)[Qt]={[0X2]=(Sa[2]-0Xf8),[1]=66,[0X3]=(Sa[0X003]-0x0000F8)};elseif Sa[0X00005]==0Xe1 then Qt=Qt-0X001;yU[Qt]={[3]=(Sa[0x03]-17),[1]=56,[2]=(Sa[0X002]-0X11)};elseif Sa[0X5]==0xeD then Qt=Qt-0X001;yU[Qt]={[2]=(Sa[0X00002]-16),[0X3]=(Sa[3]-16),[1]=16};else Rt[Sa[3]]=-Rt[Sa[0X2]];end;else if ca~=10 then if Rt[Sa[0X2]]==Sa[0X6]then else Qt=Sa[0X0003];end;else do(Rt)[Sa[0X3]]=Rt[Sa[2]]+Rt[Sa[0X5]];end;end;end;end;else do if ca>=0x2 then if ca<3 then do if Rt[Sa[2]]<=Rt[Sa[0X5]]then Qt=Sa[3];end;end;else if ca==4 then Nt[Sa[7]]=Rt[Sa[0X3]];else do(Rt)[Sa[0x3]]=true;end;end;end;else do if ca~=0X001 then do(Rt)[Sa[0X3]]=Rt[Sa[0X00002]]*Rt[Sa[5]];end;else do Rt[Sa[0X3]]={B({},0x1,Sa[0x2])};end;end;end;end;end;end;end;else if not(ca<33)then if not(ca>=0X00027)then if not(ca<0X00024)then if ca>=37 then if ca==38 then do(Rt)[Sa[3]]=false;end;else(Rt)[Sa[0X3]]=Q(Rt[Sa[0X2]],Rt[Sa[5]]);end;else if not(Rt[Sa[0X2]]<Rt[Sa[0X5]])then Qt=Sa[3];end;end;else do if ca<34 then do(Rt)[Sa[3]]=Rt[Sa[0X02]]==Rt[Sa[5]];end;else do if ca==35 then(Rt)[Sa[0x3]]=Y(Rt[Sa[2]],Rt[Sa[0X5]]);else(Rt)[Sa[3]]=Sa[0X7];end;end;end;end;end;else if not(ca<0X00002a)then if ca<43 then if not(Rt[Sa[2]]<=Sa[6])then Qt=Sa[0x00003];end;else if ca==0x0002c then(Rt)[Sa[3]]=P(Rt[Sa[2]],Rt[Sa[5]]);else local tC=Rt[Sa[2]]/Rt[Sa[5]];(Rt)[Sa[3]]=tC-tC%1;end;end;else if not(ca>=40)then do(Rt)[Sa[0X3]]={};end;else if ca~=41 then local l8=(Sa[0X005]-0X1)*50;local S8=Sa[0x3];local b8=Rt[S8];do for pI=1,Dt-S8 do b8[l8+pI]=Rt[S8+pI];end;end;else(Rt)[Sa[3]]=Rt[Sa[0X0002]]%Rt[Sa[5]];end;end;end;end;else do if not(ca<0X0001b)then if ca<30 then if ca<0X0001C then Dt=Sa[3];(Rt[Dt])();Dt=Dt-0x1;else if ca~=29 then local Nj=(Sa[3]);Rt[Nj](Rt[Nj+0x1]);Dt=Nj-1;else Rt[Sa[0x3]][Sa[0X7]]=Rt[Sa[0X5]];end;end;else do if not(ca>=31)then local Fk=(Sa[0X2]);local Vk=(Rt[Fk]);do for l7=Fk+1,Sa[5]do Vk=Vk..Rt[l7];end;end;Rt[Sa[0X3]]=Vk;else if ca==32 then if Rt[Sa[2]]~=Rt[Sa[0X5]]then Qt=Sa[3];end;else if Sa[0X5]==0X000067 then Qt=Qt-1;do(yU)[Qt]={[2]=(Sa[2]-0X001b),[1]=0X0042,[0X003]=(Sa[3]-0X01B)};end;else if Sa[5]==0X0fF then Qt=Qt-0X01;do(yU)[Qt]={[0X1]=16,[0X03]=(Sa[0X00003]-203),[0X2]=(Sa[2]-203)};end;else if not(not Rt[Sa[3]])then else Qt=Sa[2];end;end;end;end;end;end;end;else if ca<0X0018 then if ca~=23 then do Rt[Sa[0x3]]=Rt[Sa[2]]/Rt[Sa[0x0005]];end;else local vd=Sa[0X3];local wd=Rt[vd];local ld=((Sa[0X5]-0X1)*50);for nS=0x1,Sa[0X2]do do(wd)[ld+nS]=Rt[vd+nS];end;end;end;else do if ca>=25 then do if ca~=26 then local TP,aP=hU[Sa[0X2]],(nil);local EP=TP[0X1];local jP=(#EP);do if not(jP>0)then else do aP={};end;for QO=1,jP do local jO=EP[QO];if jO[1]==0 then(aP)[QO-0X01]={Rt,jO[0X2]};else(aP)[QO-1]=CU[jO[2]];end;end;R(vU,aP);end;end;do Rt[Sa[3]]=dc(Nt,TP,aP);end;else do repeat local CN,MN,eN=vU,Rt,(Sa[3]);if#CN>0x0 then local J1=({});for rB,jB in U,CN do do for V_,g_ in U,jB do if not(g_[1]==MN and g_[2]>=eN)then else local om=(g_[2]);if not(not J1[om])then else J1[om]={MN[om]};end;g_[1]=J1[om];g_[2]=0X1;end;end;end;end;end;until 0.29150456449048934;end;end;end;else(Rt)[Sa[3]]=Rt[Sa[2]]-Rt[Sa[5]];end;end;end;end;end;end;end;end;else do if not(ca>=67)then do if ca<56 then do if not(ca>=0X32)then do if ca<47 then if ca==46 then if not(Rt[Sa[2]]<Rt[Sa[0X5]])then else Qt=Sa[0x0003];end;else local wh=Sa[0x3];local Sh=L(function(...)(w)();for pb in...do w(true,pb);end;end);(Sh)(Rt[wh],Rt[wh+1],Rt[wh+2]);Dt=wh;do Rt[wh]=Sh;end;Qt=Sa[0X2];end;else if ca>=48 then do if ca~=49 then local pZ=Sa[3];(Rt)[pZ]=Rt[pZ](B(Rt,pZ+1,Dt));Dt=pZ;else do Rt[Sa[0x0003]]=f(Rt[Sa[0X2]],Rt[Sa[5]]);end;end;end;else(Rt)[Sa[0X3]]=Rt[Sa[0X2]]<=Rt[Sa[5]];end;end;end;else if ca>=0X0035 then if ca>=0X36 then if ca~=55 then if Sa[5]~=100 then local wE=(Sa[0X0003]);for Bg=wE,wE+(Sa[2]-1)do Rt[Bg]=zt[lU+(Bg-wE)+0X1];end;else do Qt=Qt-1;end;do(yU)[Qt]={[0X1]=55,[0X2]=(Sa[2]-0xf7),[3]=(Sa[0X0003]-247)};end;end;else do repeat local Dx,cx=vU,(Rt);if#Dx>0X0 then local mz={};for J9,z9 in U,Dx do for YD,qD in U,z9 do if not(qD[1]==cx and qD[2]>=0)then else local GL=qD[0X2];if not mz[GL]then mz[GL]={cx[GL]};end;do(qD)[0X1]=mz[GL];end;qD[0x2]=1;end;end;end;end;until true;end;return false,Sa[3],Dt;end;else local e9=Sa[3];local p9,X9,Z9=Rt[e9]();if not(p9)then else Rt[e9+0X1]=X9;Rt[e9+0x2]=Z9;Qt=Sa[2];end;end;else do if not(ca>=51)then local d2=(Sa[0X003]);(Rt[d2])(B(Rt,d2+0X1,Dt));Dt=d2-0x1;else if ca==52 then(Rt)[Sa[0X003]]=Jc[Sa[0X2]];else(Rt[Sa[0X03]])[Rt[Sa[2]]]=Sa[0X6];end;end;end;end;end;end;else if not(ca<0x003D)then if not(ca<64)then if not(ca>=0X41)then local hY=(Sa[0X3]);local eY=(Rt[hY+0X2]);local CY,NY=Rt[hY],(Rt[hY+1]);(Rt)[hY]=L(function()for lH=CY,NY,eY do w(true,lH);end;end);Qt=Sa[0X2];else do if ca==66 then repeat local Kn,Fn=vU,(Rt);if not(#Kn>0X000)then else local nJ={};for A6,B6 in U,Kn do for u0,z0 in U,B6 do if not(z0[0X1]==Fn and z0[0X00002]>=0X0)then else local LD=(z0[2]);if not nJ[LD]then(nJ)[LD]={Fn[LD]};end;do(z0)[1]=nJ[LD];end;(z0)[0X2]=1;end;end;end;end;until true;return;else local Ko=CU[Sa[2]];do Rt[Sa[0X3]]=Ko[0x1][Ko[2]];end;end;end;end;else do if not(ca>=0X3E)then local eI=CU[Sa[0X2]];(eI[1])[eI[2]]=Rt[Sa[0X00003]];else if ca==0X003f then(Rt[Sa[0X3]])[Sa[0X7]]=Sa[6];else Rt[Sa[0X3]]=Rt[Sa[2]][Sa[6]];end;end;end;end;else if not(ca>=58)then if ca==0X39 then Qt=Sa[2];else(Rt)[Sa[0x3]]=Rt[Sa[2]];end;else if not(ca>=0X003b)then repeat local eC,FC=vU,(Rt);if not(#eC>0X0)then else local jt={};for SL,JL in U,eC do for J4,L4 in U,JL do do if L4[0X1]==FC and L4[0x2]>=0X0 then local FL=(L4[2]);if not jt[FL]then do jt[FL]={FC[FL]};end;end;L4[1]=jt[FL];(L4)[0x02]=1;end;end;end;end;end;until true;local pw=Sa[3];return false,pw,pw;else if ca==60 then(Rt)[Sa[3]]=Rt[Sa[0X2]]>=Rt[Sa[5]];else local W4=(Sa[2]);(Rt)[Sa[0x0003]]=Rt[W4]..Rt[W4+1];end;end;end;end;end;end;else if ca<78 then if ca<0X00048 then if ca>=69 then if ca<0X000046 then(Rt)[Sa[3]]=T(Rt[Sa[2]]);else if ca~=0X000047 then(Rt[Sa[3]])[Rt[Sa[2]]]=Rt[Sa[5]];else local Aw=Sa[0X003];local Ew,Rw=Rt[Aw]();if not(Ew)then else Qt=Sa[2];(Rt)[Aw+3]=Rw;end;end;end;else do if ca~=0X44 then local Lg=Sa[2];local Pg=(Sa[0X0003]);if Lg~=0X00 then Dt=Pg+Lg-0X1;end;local bg,pg,Wg=nil,nil,(Sa[5]);if Lg~=0X0001 then bg,pg=Vc(Rt[Pg](B(Rt,Pg+0x0001,Dt)));else bg,pg=Vc(Rt[Pg]());end;if Wg==1 then Dt=Pg-1;else if Wg~=0X0 then do bg=Pg+Wg-2;end;Dt=bg+0x1;else do bg=bg+Pg-1;end;do Dt=bg;end;end;local wT=0X00;for h0=Pg,bg do wT=wT+0x1;Rt[h0]=pg[wT];end;end;else local il=Sa[3];do(Rt)[il]=Rt[il](Rt[il+1],Rt[il+0X2]);end;Dt=il;end;end;end;else if not(ca<0X4B)then if not(ca<76)then if ca==0x0004D then local NT=Sa[2];local bT=Sa[0X3];Dt=bT+NT-1;do repeat local ub,Db=vU,(Rt);if#ub>0x0 then local wk=({});do for pt,Lt in U,ub do for c4,z4 in U,Lt do if not(z4[0X01]==Db and z4[2]>=0)then else local W4=(z4[2]);do if not wk[W4]then(wk)[W4]={Db[W4]};end;end;(z4)[0X1]=wk[W4];z4[2]=0X0001;end;end;end;end;end;until true;end;do return true,bT,NT;end;else Rt[Sa[3]]=Rt[Sa[0x2]]~=Sa[0X6];end;else Rt[Sa[0X0003]]=Rt[Sa[0X02]]<Rt[Sa[0x5]];end;else if not(ca<0x00049)then do if ca==0x4a then local q2,C2=Sa[3],ut-lU;if not(C2<0X0000)then else C2=-1;end;for uQ=q2,q2+C2 do do Rt[uQ]=zt[lU+(uQ-q2)+1];end;end;Dt=q2+C2;else do repeat local Qv,iv=vU,(Rt);if not(#Qv>0X00000)then else local mn={};for E5,u5 in U,Qv do for xc,Mc in U,u5 do if Mc[1]==iv and Mc[2]>=0 then local QF=(Mc[0X00002]);if not(not mn[QF])then else(mn)[QF]={iv[QF]};end;(Mc)[1]=mn[QF];do Mc[2]=0X1;end;end;end;end;end;until true;end;local cI=Sa[3];return false,cI,cI+Sa[0x02]-0X2;end;end;else do(Rt)[Sa[3]]=Rt[Sa[2]]~=Rt[Sa[5]];end;end;end;end;else if ca>=0X54 then if ca<87 then if ca>=0X55 then if ca~=86 then(Rt)[Sa[0X03]]=Rt[Sa[0X02]]^Rt[Sa[5]];else(Rt)[Sa[0x3]]=Sa[0X007];end;else local dd=(Sa[3]);local nd=L(function(...)(w)();for Cg,hg in...do w(true,Cg,hg);end;end);nd(Rt[dd],Rt[dd+0X00001],Rt[dd+0X2]);Dt=dd;do Rt[dd]=nd;end;Qt=Sa[2];end;else if ca>=88 then if ca==0X59 then for h0=Sa[3],Sa[2]do Rt[h0]=nil;end;else do Rt[Sa[0x3]]=#Rt[Sa[0X2]];end;end;else local fQ=(Sa[0X3]);do Dt=fQ+Sa[2]-0X1;end;Rt[fQ](B(Rt,fQ+1,Dt));Dt=fQ-0X1;end;end;else do if not(ca<81)then if not(ca>=82)then local QQ=Sa[0X3];(Rt)[QQ]=Rt[QQ](Rt[QQ+1]);Dt=QQ;else if ca==0X0053 then repeat local dr,Rr=vU,Rt;if not(#dr>0)then else local xc=({});for FC,TC in U,dr do for cg,Rg in U,TC do if Rg[0X1]==Rr and Rg[0x00002]>=0 then local bI=(Rg[2]);do if not(not xc[bI])then else do(xc)[bI]={Rr[bI]};end;end;end;(Rg)[1]=xc[bI];do(Rg)[2]=0X1;end;end;end;end;end;until true;return true,Sa[0x03],1;else repeat local yY,hY=vU,(Rt);if not(#yY>0x00)then else local oa=({});for eu,ju in U,yY do for zr,Br in U,ju do do if not(Br[0x1]==hY and Br[0X00002]>=0X0)then else local qQ=Br[2];if not oa[qQ]then do oa[qQ]={hY[qQ]};end;end;Br[0X001]=oa[qQ];Br[2]=1;end;end;end;end;end;until true;do return true,Sa[3],0X000;end;end;end;else if ca<79 then repeat local C8,k8=vU,Rt;do if#C8>0 then local JI=({});for yc,xc in U,C8 do for hO,DO in U,xc do if DO[1]==k8 and DO[0X00002]>=0X0 then local Gp=DO[2];if not(not JI[Gp])then else JI[Gp]={k8[Gp]};end;DO[1]=JI[Gp];do DO[0X2]=1;end;end;end;end;end;end;until true;local T9=Sa[3];Dt=T9+0X001;return true,T9,0X0002;else if ca==80 then if Sa[5]~=192 then(Rt)[Sa[3]]=zt[lU+0X01];else Qt=Qt-0X1;yU[Qt]={[3]=(Sa[3]-0X032),[0X2]=(Sa[2]-50),[0X00001]=0X38};end;else local tH=Sa[0X3];local nH=(L(function(...)(w)();do for br,Or,dr,vr,Lr,gr,Zr,Er,ir,sr in...do(w)(true,{br,Or,dr,vr,Lr,gr,Zr,Er,ir,sr});end;end;end));nH(Rt[tH],Rt[tH+0X1],Rt[tH+2]);Dt=tH;(Rt)[tH]=nH;do Qt=Sa[2];end;end;end;end;end;end;end;end;end;end;end;end);do if Pt then if wt then if qt==1 then return Rt[ft]();else return Rt[ft](B(Rt,ft+1,Dt));end;elseif ft then return B(Rt,ft,qt);end;elseif q(wt)=="string"then do if not(X(wt,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if not(X(wt,'\094.\045:\037d\043:\032'))then(J)(wt,0x0);else J('Luraph \083cr\105p\116\058'..(uU[Qt-0x0001]or"\040intern\097\108\041").."\058 "..p(wt),0);end;else J(wt,0);end;end;end;if I then(I)(MU,UU);end;return MU;end;Zc=0x0;end;until Zc>=2;end;local A=Kc;local cc=ac();Jc[1]=qc;do qc=kc;end;do return dc(S,cc,kc)(...);end;end)(0x0000f,0X5,7,0,0X1,179,string.rep,0XA,8,"\108sh\105f\116",table.insert,256,tostring,coroutine.wrap,0X2,string.gsub,string,0x04,0xB,bit,nil,string.byte,rawset,'\098\110ot',tonumber,assert,0X000010,9,65,12,getfenv,type,bit32,246,"",0X6,3,setmetatable,...);
